[2017-01-12 15:41:57] doctrine.DEBUG: SELECT name FROM sysobjects WHERE type = 'U' AND name != 'sysdiagrams' AND category != 2 ORDER BY name [] []
[2017-01-12 15:41:57] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'Consorcio' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-12 15:41:57] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'Consorcio' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-12 15:41:57] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'Consorcio' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-12 15:44:33] doctrine.DEBUG: SELECT name FROM sysobjects WHERE type = 'U' AND name != 'sysdiagrams' AND category != 2 ORDER BY name [] []
[2017-01-12 15:44:33] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'Consorcio' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-12 15:44:33] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'Consorcio' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-12 15:44:33] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'Consorcio' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-12 20:17:00] doctrine.DEBUG: SELECT name FROM sysobjects WHERE type = 'U' AND name != 'sysdiagrams' AND category != 2 ORDER BY name [] []
[2017-01-12 20:17:00] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-12 20:17:00] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CONSORCIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-12 20:17:00] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-12 20:20:52] doctrine.DEBUG: SELECT name FROM sysobjects WHERE type = 'U' AND name != 'sysdiagrams' AND category != 2 ORDER BY name [] []
[2017-01-12 20:20:52] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-12 20:20:52] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CONSORCIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-12 20:20:52] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-12 20:22:58] doctrine.DEBUG: SELECT name FROM sysobjects WHERE type = 'U' AND name != 'sysdiagrams' AND category != 2 ORDER BY name [] []
[2017-01-12 20:22:58] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-12 20:22:59] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CONSORCIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-12 20:22:59] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-12 20:43:24] doctrine.DEBUG: SELECT name FROM sysobjects WHERE type = 'U' AND name != 'sysdiagrams' AND category != 2 ORDER BY name [] []
[2017-01-12 20:43:24] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-12 20:43:24] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CONSORCIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-12 20:43:24] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-12 20:43:37] doctrine.DEBUG: SELECT name FROM sysobjects WHERE type = 'U' AND name != 'sysdiagrams' AND category != 2 ORDER BY name [] []
[2017-01-12 20:43:37] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-12 20:43:37] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CONSORCIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-12 20:43:37] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-12 20:51:46] doctrine.DEBUG: SELECT name FROM sysobjects WHERE type = 'U' AND name != 'sysdiagrams' AND category != 2 ORDER BY name [] []
[2017-01-12 20:51:46] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-12 20:51:47] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CONSORCIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-12 20:51:47] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-12 20:52:16] doctrine.DEBUG: SELECT name FROM sysobjects WHERE type = 'U' AND name != 'sysdiagrams' AND category != 2 ORDER BY name [] []
[2017-01-12 20:52:16] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-12 20:52:16] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CONSORCIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-12 20:52:16] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-13 21:13:17] doctrine.DEBUG: SELECT name FROM sysobjects WHERE type = 'U' AND name != 'sysdiagrams' AND category != 2 ORDER BY name [] []
[2017-01-13 21:13:17] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CLIENTES' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-13 21:13:19] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CLIENTES' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-13 21:13:19] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CLIENTES' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-13 21:13:19] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-13 21:13:19] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CONSORCIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-13 21:13:19] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-13 21:17:02] doctrine.DEBUG: SELECT name FROM sysobjects WHERE type = 'U' AND name != 'sysdiagrams' AND category != 2 ORDER BY name [] []
[2017-01-13 21:17:02] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CLIENTES' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-13 21:17:02] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CLIENTES' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-13 21:17:02] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CLIENTES' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-13 21:17:02] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-13 21:17:02] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CONSORCIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-13 21:17:02] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-16 15:50:05] doctrine.DEBUG: SELECT name FROM sysobjects WHERE type = 'U' AND name != 'sysdiagrams' AND category != 2 ORDER BY name [] []
[2017-01-16 15:50:05] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CLIENTES' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-16 15:50:05] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CLIENTES' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-16 15:50:05] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CLIENTES' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-16 15:50:05] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-16 15:50:05] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CONSORCIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-16 15:50:05] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-16 15:51:05] doctrine.DEBUG: SELECT name FROM sysobjects WHERE type = 'U' AND name != 'sysdiagrams' AND category != 2 ORDER BY name [] []
[2017-01-16 15:51:05] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CLIENTES' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-16 15:51:06] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CLIENTES' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-16 15:51:06] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CLIENTES' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-16 15:51:06] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-16 15:51:06] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CONSORCIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-16 15:51:06] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-16 16:11:44] doctrine.DEBUG: SELECT name FROM sysobjects WHERE type = 'U' AND name != 'sysdiagrams' AND category != 2 ORDER BY name [] []
[2017-01-16 16:11:44] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_COBRO' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-16 16:11:45] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_COBRO' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-16 16:11:45] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_COBRO' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-16 16:11:45] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-16 16:11:45] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CONSORCIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-16 16:11:45] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-16 16:11:45] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-16 16:11:45] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SUCURSALES' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-16 16:11:45] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-16 16:12:15] doctrine.DEBUG: SELECT name FROM sysobjects WHERE type = 'U' AND name != 'sysdiagrams' AND category != 2 ORDER BY name [] []
[2017-01-16 16:12:15] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_COBRO' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-16 16:12:15] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_COBRO' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-16 16:12:15] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_COBRO' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-16 16:12:15] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-16 16:12:15] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CONSORCIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-16 16:12:15] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-16 16:12:15] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-16 16:12:15] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SUCURSALES' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-16 16:12:15] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-16 17:14:32] doctrine.DEBUG: SELECT name FROM sysobjects WHERE type = 'U' AND name != 'sysdiagrams' AND category != 2 ORDER BY name [] []
[2017-01-16 17:14:32] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_COBRO' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-16 17:14:32] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_COBRO' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-16 17:14:32] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_COBRO' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-16 17:14:32] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-16 17:14:32] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CONSORCIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-16 17:14:32] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-16 17:14:32] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-16 17:14:32] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SUCURSALES' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-16 17:14:32] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-16 17:14:44] doctrine.DEBUG: SELECT name FROM sysobjects WHERE type = 'U' AND name != 'sysdiagrams' AND category != 2 ORDER BY name [] []
[2017-01-16 17:14:44] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_COBRO' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-16 17:14:44] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_COBRO' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-16 17:14:44] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_COBRO' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-16 17:14:44] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-16 17:14:45] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CONSORCIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-16 17:14:45] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-16 17:14:45] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-16 17:14:45] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SUCURSALES' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-16 17:14:45] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-16 20:28:58] doctrine.DEBUG: SELECT name FROM sysobjects WHERE type = 'U' AND name != 'sysdiagrams' AND category != 2 ORDER BY name [] []
[2017-01-16 20:28:58] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_COBRO' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-16 20:28:59] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_COBRO' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-16 20:28:59] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_COBRO' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-16 20:28:59] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-16 20:28:59] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CONSORCIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-16 20:28:59] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-16 20:28:59] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-16 20:28:59] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SUCURSALES' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-16 20:28:59] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-16 20:29:26] doctrine.DEBUG: SELECT name FROM sysobjects WHERE type = 'U' AND name != 'sysdiagrams' AND category != 2 ORDER BY name [] []
[2017-01-16 20:29:26] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_COBRO' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-16 20:29:26] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_COBRO' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-16 20:29:26] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_COBRO' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-16 20:29:26] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-16 20:29:26] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CONSORCIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-16 20:29:26] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-16 20:29:26] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-16 20:29:26] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SUCURSALES' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-16 20:29:26] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-16 21:23:01] doctrine.DEBUG: SELECT name FROM sysobjects WHERE type = 'U' AND name != 'sysdiagrams' AND category != 2 ORDER BY name [] []
[2017-01-16 21:23:01] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_COBRO' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-16 21:23:01] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_COBRO' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-16 21:23:01] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_COBRO' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-16 21:23:01] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-16 21:23:01] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_SERVICIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-16 21:23:01] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-16 21:23:01] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-16 21:23:01] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CONSORCIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-16 21:23:02] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-16 21:23:02] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-16 21:23:02] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SUCURSALES' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-16 21:23:02] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-16 21:23:36] doctrine.DEBUG: SELECT name FROM sysobjects WHERE type = 'U' AND name != 'sysdiagrams' AND category != 2 ORDER BY name [] []
[2017-01-16 21:23:36] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_COBRO' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-16 21:23:36] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_COBRO' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-16 21:23:36] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_COBRO' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-16 21:23:36] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-16 21:23:36] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_SERVICIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-16 21:23:36] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-16 21:23:36] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-16 21:23:36] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CONSORCIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-16 21:23:36] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-16 21:23:36] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-16 21:23:36] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SUCURSALES' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-16 21:23:36] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-16 21:33:25] doctrine.DEBUG: SELECT name FROM sysobjects WHERE type = 'U' AND name != 'sysdiagrams' AND category != 2 ORDER BY name [] []
[2017-01-16 21:33:25] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_COBROS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-16 21:33:26] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_COBROS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-16 21:33:26] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_COBROS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-16 21:33:26] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-16 21:33:26] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_SERVICIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-16 21:33:26] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-16 21:33:26] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-16 21:33:26] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CONSORCIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-16 21:33:26] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-16 21:33:26] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-16 21:33:26] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SUCURSALES' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-16 21:33:26] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-16 21:34:05] doctrine.DEBUG: SELECT name FROM sysobjects WHERE type = 'U' AND name != 'sysdiagrams' AND category != 2 ORDER BY name [] []
[2017-01-16 21:34:05] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_COBROS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-16 21:34:05] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_COBROS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-16 21:34:05] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_COBROS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-16 21:34:05] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-16 21:34:05] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_SERVICIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-16 21:34:05] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-16 21:34:05] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-16 21:34:05] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CONSORCIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-16 21:34:05] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-16 21:34:05] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-16 21:34:05] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SUCURSALES' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-16 21:34:05] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-16 23:38:10] doctrine.DEBUG: SELECT name FROM sysobjects WHERE type = 'U' AND name != 'sysdiagrams' AND category != 2 ORDER BY name [] []
[2017-01-16 23:38:10] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_COBROS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-16 23:38:10] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_COBROS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-16 23:38:10] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_COBROS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-16 23:38:10] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-16 23:38:10] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_SERVICIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-16 23:38:10] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-16 23:38:10] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-16 23:38:10] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CONSORCIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-16 23:38:10] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-16 23:38:10] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'MONEDAS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-16 23:38:10] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'MONEDAS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-16 23:38:10] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'MONEDAS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-16 23:38:10] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-16 23:38:10] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SUCURSALES' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-16 23:38:10] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-16 23:38:20] doctrine.DEBUG: SELECT name FROM sysobjects WHERE type = 'U' AND name != 'sysdiagrams' AND category != 2 ORDER BY name [] []
[2017-01-16 23:38:20] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_COBROS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-16 23:38:20] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_COBROS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-16 23:38:20] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_COBROS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-16 23:38:20] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-16 23:38:20] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_SERVICIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-16 23:38:20] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-16 23:38:20] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-16 23:38:20] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CONSORCIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-16 23:38:20] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-16 23:38:20] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'MONEDAS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-16 23:38:20] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'MONEDAS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-16 23:38:20] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'MONEDAS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-16 23:38:20] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-16 23:38:20] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SUCURSALES' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-16 23:38:20] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-18 16:52:20] doctrine.DEBUG: SELECT name FROM sysobjects WHERE type = 'U' AND name != 'sysdiagrams' AND category != 2 ORDER BY name [] []
[2017-01-18 16:52:21] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_COBROS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-18 16:52:21] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_COBROS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-18 16:52:21] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_COBROS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-18 16:52:21] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-18 16:52:21] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_SERVICIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-18 16:52:21] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-18 16:52:21] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-18 16:52:21] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CONSORCIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-18 16:52:21] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-18 16:52:21] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'MONEDAS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-18 16:52:21] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'MONEDAS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-18 16:52:21] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'MONEDAS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-18 16:52:21] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-18 16:52:21] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SUCURSALES' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-18 16:52:21] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-18 16:52:47] doctrine.DEBUG: SELECT name FROM sysobjects WHERE type = 'U' AND name != 'sysdiagrams' AND category != 2 ORDER BY name [] []
[2017-01-18 16:52:47] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_COBROS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-18 16:52:47] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_COBROS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-18 16:52:47] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_COBROS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-18 16:52:47] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-18 16:52:47] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_SERVICIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-18 16:52:47] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-18 16:52:48] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-18 16:52:48] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CONSORCIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-18 16:52:48] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-18 16:52:48] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'MONEDAS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-18 16:52:48] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'MONEDAS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-18 16:52:48] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'MONEDAS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-18 16:52:48] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-18 16:52:48] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SUCURSALES' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-18 16:52:48] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-18 17:06:11] doctrine.DEBUG: SELECT name FROM sysobjects WHERE type = 'U' AND name != 'sysdiagrams' AND category != 2 ORDER BY name [] []
[2017-01-18 17:06:11] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_COBROS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-18 17:06:11] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_COBROS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-18 17:06:11] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_COBROS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-18 17:06:11] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-18 17:06:12] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_SERVICIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-18 17:06:12] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-18 17:06:12] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-18 17:06:12] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CONSORCIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-18 17:06:12] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-18 17:06:12] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'MONEDAS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-18 17:06:12] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'MONEDAS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-18 17:06:12] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'MONEDAS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-18 17:06:12] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-18 17:06:12] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SUCURSALES' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-18 17:06:12] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-18 17:07:15] doctrine.DEBUG: SELECT name FROM sysobjects WHERE type = 'U' AND name != 'sysdiagrams' AND category != 2 ORDER BY name [] []
[2017-01-18 17:07:15] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_COBROS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-18 17:07:15] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_COBROS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-18 17:07:15] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_COBROS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-18 17:07:15] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-18 17:07:15] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_SERVICIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-18 17:07:15] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-18 17:07:15] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-18 17:07:15] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CONSORCIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-18 17:07:15] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-18 17:07:15] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'MONEDAS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-18 17:07:15] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'MONEDAS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-18 17:07:15] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'MONEDAS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-18 17:07:15] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-18 17:07:15] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SUCURSALES' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-18 17:07:15] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-18 17:33:59] doctrine.DEBUG: SELECT name FROM sysobjects WHERE type = 'U' AND name != 'sysdiagrams' AND category != 2 ORDER BY name [] []
[2017-01-18 17:33:59] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_COBROS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-18 17:34:00] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_COBROS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-18 17:34:00] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_COBROS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-18 17:34:00] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-18 17:34:00] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_SERVICIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-18 17:34:00] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-18 17:34:00] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-18 17:34:00] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CONSORCIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-18 17:34:00] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-18 17:34:00] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'MONEDAS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-18 17:34:00] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'MONEDAS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-18 17:34:00] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'MONEDAS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-18 17:34:00] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-18 17:34:00] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SUCURSALES' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-18 17:34:00] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-18 17:34:13] doctrine.DEBUG: SELECT name FROM sysobjects WHERE type = 'U' AND name != 'sysdiagrams' AND category != 2 ORDER BY name [] []
[2017-01-18 17:34:13] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_COBROS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-18 17:34:13] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_COBROS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-18 17:34:13] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_COBROS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-18 17:34:13] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-18 17:34:13] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_SERVICIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-18 17:34:13] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-18 17:34:13] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-18 17:34:14] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CONSORCIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-18 17:34:14] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-18 17:34:14] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'MONEDAS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-18 17:34:14] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'MONEDAS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-18 17:34:14] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'MONEDAS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-18 17:34:14] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-18 17:34:14] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SUCURSALES' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-18 17:34:14] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-18 17:35:36] doctrine.DEBUG: SELECT name FROM sysobjects WHERE type = 'U' AND name != 'sysdiagrams' AND category != 2 ORDER BY name [] []
[2017-01-18 17:35:37] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_COBROS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-18 17:35:37] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_COBROS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-18 17:35:37] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_COBROS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-18 17:35:37] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-18 17:35:37] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_SERVICIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-18 17:35:37] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-18 17:35:37] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-18 17:35:37] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CONSORCIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-18 17:35:37] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-18 17:35:37] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'MONEDAS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-18 17:35:37] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'MONEDAS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-18 17:35:37] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'MONEDAS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-18 17:35:37] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-18 17:35:37] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SUCURSALES' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-18 17:35:37] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-18 17:54:38] doctrine.DEBUG: SELECT name FROM sysobjects WHERE type = 'U' AND name != 'sysdiagrams' AND category != 2 ORDER BY name [] []
[2017-01-18 17:54:38] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_COBROS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-18 17:54:38] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_COBROS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-18 17:54:38] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_COBROS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-18 17:54:38] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-18 17:54:38] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_SERVICIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-18 17:54:38] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-18 17:54:38] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-18 17:54:38] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CONSORCIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-18 17:54:38] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-18 17:54:38] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'MONEDAS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-18 17:54:38] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'MONEDAS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-18 17:54:38] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'MONEDAS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-18 17:54:38] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-18 17:54:38] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SUCURSALES' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-18 17:54:38] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-18 17:54:59] doctrine.DEBUG: SELECT name FROM sysobjects WHERE type = 'U' AND name != 'sysdiagrams' AND category != 2 ORDER BY name [] []
[2017-01-18 17:54:59] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_COBROS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-18 17:54:59] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_COBROS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-18 17:54:59] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_COBROS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-18 17:54:59] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-18 17:54:59] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_SERVICIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-18 17:54:59] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-18 17:54:59] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-18 17:55:00] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CONSORCIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-18 17:55:00] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-18 17:55:00] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'MONEDAS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-18 17:55:00] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'MONEDAS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-18 17:55:00] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'MONEDAS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-18 17:55:00] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-18 17:55:00] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SUCURSALES' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-18 17:55:00] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-18 17:55:54] doctrine.DEBUG: SELECT name FROM sysobjects WHERE type = 'U' AND name != 'sysdiagrams' AND category != 2 ORDER BY name [] []
[2017-01-18 17:55:54] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_COBROS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-18 17:55:54] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_COBROS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-18 17:55:54] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_COBROS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-18 17:55:55] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-18 17:55:55] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_SERVICIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-18 17:55:55] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-18 17:55:55] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-18 17:55:55] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CONSORCIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-18 17:55:55] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-18 17:55:55] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'MONEDAS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-18 17:55:55] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'MONEDAS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-18 17:55:55] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'MONEDAS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-18 17:55:55] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-18 17:55:55] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SUCURSALES' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-18 17:55:55] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-18 17:56:26] doctrine.DEBUG: SELECT name FROM sysobjects WHERE type = 'U' AND name != 'sysdiagrams' AND category != 2 ORDER BY name [] []
[2017-01-18 17:56:26] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_COBROS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-18 17:56:26] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_COBROS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-18 17:56:26] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_COBROS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-18 17:56:26] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-18 17:56:26] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_SERVICIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-18 17:56:26] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-18 17:56:26] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-18 17:56:27] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CONSORCIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-18 17:56:27] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-18 17:56:27] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'MONEDAS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-18 17:56:27] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'MONEDAS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-18 17:56:27] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'MONEDAS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-18 17:56:27] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-18 17:56:27] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SUCURSALES' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-18 17:56:27] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-18 17:57:33] doctrine.DEBUG: SELECT name FROM sysobjects WHERE type = 'U' AND name != 'sysdiagrams' AND category != 2 ORDER BY name [] []
[2017-01-18 17:57:33] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_COBROS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-18 17:57:33] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_COBROS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-18 17:57:33] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_COBROS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-18 17:57:33] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-18 17:57:33] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_SERVICIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-18 17:57:33] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-18 17:57:33] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-18 17:57:34] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CONSORCIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-18 17:57:34] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-18 17:57:34] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'MONEDAS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-18 17:57:34] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'MONEDAS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-18 17:57:34] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'MONEDAS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-18 17:57:34] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-18 17:57:34] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SUCURSALES' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-18 17:57:34] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-18 17:57:53] doctrine.DEBUG: SELECT name FROM sysobjects WHERE type = 'U' AND name != 'sysdiagrams' AND category != 2 ORDER BY name [] []
[2017-01-18 17:57:53] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_COBROS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-18 17:57:53] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_COBROS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-18 17:57:53] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_COBROS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-18 17:57:53] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-18 17:57:53] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_SERVICIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-18 17:57:53] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-18 17:57:53] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-18 17:57:53] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CONSORCIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-18 17:57:53] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-18 17:57:53] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'MONEDAS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-18 17:57:53] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'MONEDAS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-18 17:57:53] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'MONEDAS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-18 17:57:53] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-18 17:57:53] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SUCURSALES' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-18 17:57:53] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-18 17:58:30] doctrine.DEBUG: SELECT name FROM sysobjects WHERE type = 'U' AND name != 'sysdiagrams' AND category != 2 ORDER BY name [] []
[2017-01-18 17:58:30] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_COBROS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-18 17:58:30] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_COBROS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-18 17:58:30] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_COBROS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-18 17:58:30] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-18 17:58:30] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_SERVICIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-18 17:58:30] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-18 17:58:30] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-18 17:58:30] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CONSORCIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-18 17:58:30] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-18 17:58:30] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'MONEDAS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-18 17:58:30] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'MONEDAS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-18 17:58:30] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'MONEDAS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-18 17:58:30] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-18 17:58:31] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SUCURSALES' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-18 17:58:31] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-18 17:58:40] doctrine.DEBUG: SELECT name FROM sysobjects WHERE type = 'U' AND name != 'sysdiagrams' AND category != 2 ORDER BY name [] []
[2017-01-18 17:58:40] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_COBROS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-18 17:58:40] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_COBROS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-18 17:58:40] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_COBROS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-18 17:58:40] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-18 17:58:40] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_SERVICIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-18 17:58:40] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-18 17:58:40] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-18 17:58:40] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CONSORCIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-18 17:58:40] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-18 17:58:40] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'MONEDAS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-18 17:58:40] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'MONEDAS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-18 17:58:40] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'MONEDAS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-18 17:58:41] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-18 17:58:41] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SUCURSALES' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-18 17:58:41] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-24 18:21:33] doctrine.DEBUG: SELECT name FROM sysobjects WHERE type = 'U' AND name != 'sysdiagrams' AND category != 2 ORDER BY name [] []
[2017-01-24 18:21:33] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'ARTICULOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-24 18:21:33] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'ARTICULOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-24 18:21:33] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'ARTICULOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-24 18:21:33] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_COBROS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-24 18:21:33] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_COBROS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-24 18:21:33] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_COBROS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-24 18:21:33] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-24 18:21:34] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_SERVICIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-24 18:21:34] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-24 18:21:34] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-24 18:21:34] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CONSORCIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-24 18:21:34] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-24 18:21:34] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'MONEDAS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-24 18:21:34] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'MONEDAS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-24 18:21:34] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'MONEDAS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-24 18:21:34] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-24 18:21:34] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SUCURSALES' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-24 18:21:34] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-24 18:22:21] doctrine.DEBUG: SELECT name FROM sysobjects WHERE type = 'U' AND name != 'sysdiagrams' AND category != 2 ORDER BY name [] []
[2017-01-24 18:22:21] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'ARTICULOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-24 18:22:21] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'ARTICULOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-24 18:22:21] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'ARTICULOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-24 18:22:21] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_COBROS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-24 18:22:21] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_COBROS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-24 18:22:21] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_COBROS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-24 18:22:21] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-24 18:22:21] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_SERVICIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-24 18:22:21] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-24 18:22:21] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-24 18:22:21] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CONSORCIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-24 18:22:21] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-24 18:22:21] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'MONEDAS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-24 18:22:21] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'MONEDAS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-24 18:22:21] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'MONEDAS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-24 18:22:21] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-24 18:22:21] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SUCURSALES' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-24 18:22:21] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-24 18:22:36] doctrine.DEBUG: SELECT name FROM sysobjects WHERE type = 'U' AND name != 'sysdiagrams' AND category != 2 ORDER BY name [] []
[2017-01-24 18:22:36] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'ARTICULOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-24 18:22:36] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'ARTICULOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-24 18:22:36] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'ARTICULOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-24 18:22:36] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_COBROS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-24 18:22:36] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_COBROS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-24 18:22:36] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_COBROS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-24 18:22:36] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-24 18:22:36] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_SERVICIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-24 18:22:36] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-24 18:22:36] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-24 18:22:36] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CONSORCIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-24 18:22:36] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-24 18:22:36] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'MONEDAS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-24 18:22:36] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'MONEDAS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-24 18:22:36] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'MONEDAS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-24 18:22:36] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-24 18:22:36] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SUCURSALES' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-24 18:22:36] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-24 18:23:05] doctrine.DEBUG: SELECT name FROM sysobjects WHERE type = 'U' AND name != 'sysdiagrams' AND category != 2 ORDER BY name [] []
[2017-01-24 18:23:05] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'ARTICULOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-24 18:23:05] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'ARTICULOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-24 18:23:05] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'ARTICULOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-24 18:23:05] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_COBROS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-24 18:23:05] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_COBROS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-24 18:23:05] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_COBROS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-24 18:23:05] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-24 18:23:05] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_SERVICIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-24 18:23:05] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-24 18:23:05] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-24 18:23:05] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CONSORCIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-24 18:23:05] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-24 18:23:05] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'MONEDAS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-24 18:23:05] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'MONEDAS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-24 18:23:05] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'MONEDAS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-24 18:23:05] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-24 18:23:05] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SUCURSALES' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-24 18:23:06] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-24 18:23:14] doctrine.DEBUG: SELECT name FROM sysobjects WHERE type = 'U' AND name != 'sysdiagrams' AND category != 2 ORDER BY name [] []
[2017-01-24 18:23:14] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'ARTICULOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-24 18:23:14] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'ARTICULOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-24 18:23:14] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'ARTICULOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-24 18:23:14] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_COBROS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-24 18:23:14] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_COBROS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-24 18:23:14] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_COBROS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-24 18:23:14] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-24 18:23:14] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_SERVICIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-24 18:23:14] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-24 18:23:14] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-24 18:23:14] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CONSORCIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-24 18:23:14] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-24 18:23:14] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'MONEDAS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-24 18:23:14] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'MONEDAS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-24 18:23:14] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'MONEDAS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-24 18:23:14] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-24 18:23:14] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SUCURSALES' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-24 18:23:14] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-24 18:23:18] doctrine.DEBUG: SELECT name FROM sysobjects WHERE type = 'U' AND name != 'sysdiagrams' AND category != 2 ORDER BY name [] []
[2017-01-24 18:23:18] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'ARTICULOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-24 18:23:18] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'ARTICULOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-24 18:23:18] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'ARTICULOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-24 18:23:18] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_COBROS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-24 18:23:18] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_COBROS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-24 18:23:18] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_COBROS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-24 18:23:18] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-24 18:23:18] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_SERVICIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-24 18:23:18] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-24 18:23:18] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-24 18:23:18] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CONSORCIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-24 18:23:18] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-24 18:23:18] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'MONEDAS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-24 18:23:18] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'MONEDAS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-24 18:23:18] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'MONEDAS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-24 18:23:18] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-24 18:23:18] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SUCURSALES' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-24 18:23:18] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-24 18:24:43] doctrine.DEBUG: SELECT name FROM sysobjects WHERE type = 'U' AND name != 'sysdiagrams' AND category != 2 ORDER BY name [] []
[2017-01-24 18:24:43] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'ARTICULOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-24 18:24:43] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'ARTICULOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-24 18:24:43] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'ARTICULOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-24 18:24:43] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_COBROS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-24 18:24:43] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_COBROS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-24 18:24:43] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_COBROS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-24 18:24:43] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-24 18:24:43] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_SERVICIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-24 18:24:43] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-24 18:24:43] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-24 18:24:43] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CONSORCIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-24 18:24:43] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-24 18:24:43] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'MONEDAS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-24 18:24:43] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'MONEDAS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-24 18:24:43] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'MONEDAS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-24 18:24:43] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-24 18:24:43] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SUCURSALES' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-24 18:24:43] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-24 18:25:54] doctrine.DEBUG: SELECT name FROM sysobjects WHERE type = 'U' AND name != 'sysdiagrams' AND category != 2 ORDER BY name [] []
[2017-01-24 18:25:54] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'ARTICULOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-24 18:25:54] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'ARTICULOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-24 18:25:54] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'ARTICULOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-24 18:25:54] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_COBROS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-24 18:25:54] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_COBROS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-24 18:25:54] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_COBROS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-24 18:25:54] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-24 18:25:54] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_SERVICIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-24 18:25:54] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-24 18:25:54] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-24 18:25:54] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CONSORCIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-24 18:25:54] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-24 18:25:54] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'MONEDAS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-24 18:25:54] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'MONEDAS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-24 18:25:54] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'MONEDAS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-24 18:25:54] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-24 18:25:54] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SUCURSALES' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-24 18:25:54] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-24 18:29:11] doctrine.DEBUG: SELECT name FROM sysobjects WHERE type = 'U' AND name != 'sysdiagrams' AND category != 2 ORDER BY name [] []
[2017-01-24 18:29:11] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'ARTICULOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-24 18:29:11] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'ARTICULOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-24 18:29:11] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'ARTICULOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-24 18:29:11] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_COBROS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-24 18:29:11] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_COBROS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-24 18:29:11] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_COBROS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-24 18:29:11] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-24 18:29:11] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_SERVICIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-24 18:29:11] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-24 18:29:11] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-24 18:29:11] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CONSORCIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-24 18:29:11] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-24 18:29:11] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'MONEDAS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-24 18:29:11] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'MONEDAS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-24 18:29:11] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'MONEDAS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-24 18:29:11] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-24 18:29:11] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SUCURSALES' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-24 18:29:11] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-24 18:34:09] doctrine.DEBUG: SELECT name FROM sysobjects WHERE type = 'U' AND name != 'sysdiagrams' AND category != 2 ORDER BY name [] []
[2017-01-24 18:34:09] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'ARTICULOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-24 18:34:09] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'ARTICULOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-24 18:34:09] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'ARTICULOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-24 18:34:09] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_COBROS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-24 18:34:09] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_COBROS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-24 18:34:09] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_COBROS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-24 18:34:09] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-24 18:34:09] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_SERVICIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-24 18:34:09] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-24 18:34:09] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-24 18:34:09] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CONSORCIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-24 18:34:09] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-24 18:34:09] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'MONEDAS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-24 18:34:09] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'MONEDAS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-24 18:34:09] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'MONEDAS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-24 18:34:09] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-24 18:34:09] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SUCURSALES' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-24 18:34:09] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-24 18:35:07] doctrine.DEBUG: SELECT name FROM sysobjects WHERE type = 'U' AND name != 'sysdiagrams' AND category != 2 ORDER BY name [] []
[2017-01-24 18:35:07] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'ARTICULOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-24 18:35:07] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'ARTICULOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-24 18:35:07] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'ARTICULOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-24 18:35:07] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_COBROS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-24 18:35:07] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_COBROS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-24 18:35:07] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_COBROS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-24 18:35:07] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-24 18:35:07] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_SERVICIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-24 18:35:07] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-24 18:35:07] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-24 18:35:07] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CONSORCIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-24 18:35:07] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-24 18:35:07] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'MONEDAS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-24 18:35:07] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'MONEDAS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-24 18:35:07] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'MONEDAS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-24 18:35:07] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-24 18:35:07] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SUCURSALES' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-24 18:35:07] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-24 18:35:23] doctrine.DEBUG: SELECT name FROM sysobjects WHERE type = 'U' AND name != 'sysdiagrams' AND category != 2 ORDER BY name [] []
[2017-01-24 18:35:23] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'ARTICULOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-24 18:35:23] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'ARTICULOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-24 18:35:23] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'ARTICULOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-24 18:35:23] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_COBROS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-24 18:35:23] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_COBROS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-24 18:35:23] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_COBROS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-24 18:35:23] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-24 18:35:23] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_SERVICIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-24 18:35:23] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-24 18:35:23] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-24 18:35:23] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CONSORCIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-24 18:35:23] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-24 18:35:23] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'MONEDAS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-24 18:35:23] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'MONEDAS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-24 18:35:23] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'MONEDAS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-24 18:35:23] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-24 18:35:23] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SUCURSALES' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-24 18:35:23] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-25 21:01:24] doctrine.DEBUG: SELECT name FROM sysobjects WHERE type = 'U' AND name != 'sysdiagrams' AND category != 2 ORDER BY name [] []
[2017-01-25 21:01:24] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'ARTICULOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-25 21:01:24] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'ARTICULOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-25 21:01:24] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'ARTICULOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-25 21:01:24] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_COBROS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-25 21:01:24] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_COBROS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-25 21:01:24] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_COBROS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-25 21:01:25] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-25 21:01:25] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_SERVICIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-25 21:01:25] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-25 21:01:25] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-25 21:01:25] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATEGORIA_ARTICULOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-25 21:01:25] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-25 21:01:25] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-25 21:01:25] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CONSORCIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-25 21:01:25] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-25 21:01:25] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'MONEDAS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-25 21:01:25] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'MONEDAS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-25 21:01:25] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'MONEDAS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-25 21:01:25] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SUBCATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-25 21:01:25] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SUBCATEGORIA_ARTICULOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-25 21:01:25] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SUBCATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-25 21:01:25] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-25 21:01:25] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SUCURSALES' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-25 21:01:25] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-25 21:01:25] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'TIPOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-25 21:01:25] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'TIPOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-25 21:01:25] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'TIPOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-25 21:02:12] doctrine.DEBUG: SELECT name FROM sysobjects WHERE type = 'U' AND name != 'sysdiagrams' AND category != 2 ORDER BY name [] []
[2017-01-25 21:02:12] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'ARTICULOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-25 21:02:12] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'ARTICULOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-25 21:02:12] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'ARTICULOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-25 21:02:12] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_COBROS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-25 21:02:12] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_COBROS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-25 21:02:12] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_COBROS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-25 21:02:12] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-25 21:02:12] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_SERVICIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-25 21:02:12] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-25 21:02:12] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-25 21:02:12] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATEGORIA_ARTICULOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-25 21:02:12] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-25 21:02:12] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-25 21:02:12] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CONSORCIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-25 21:02:12] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-25 21:02:12] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'MONEDAS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-25 21:02:12] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'MONEDAS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-25 21:02:12] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'MONEDAS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-25 21:02:12] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SUBCATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-25 21:02:12] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SUBCATEGORIA_ARTICULOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-25 21:02:12] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SUBCATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-25 21:02:12] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-25 21:02:12] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SUCURSALES' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-25 21:02:12] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-25 21:02:12] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'TIPOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-25 21:02:12] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'TIPOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-25 21:02:12] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'TIPOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-25 21:14:19] doctrine.DEBUG: SELECT name FROM sysobjects WHERE type = 'U' AND name != 'sysdiagrams' AND category != 2 ORDER BY name [] []
[2017-01-25 21:14:19] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'ARTICULOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-25 21:14:19] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'ARTICULOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-25 21:14:19] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'ARTICULOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-25 21:14:19] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_COBROS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-25 21:14:19] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_COBROS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-25 21:14:19] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_COBROS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-25 21:14:19] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-25 21:14:19] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_SERVICIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-25 21:14:19] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-25 21:14:19] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-25 21:14:19] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATEGORIA_ARTICULOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-25 21:14:19] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-25 21:14:19] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-25 21:14:19] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CONSORCIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-25 21:14:19] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-25 21:14:19] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'MONEDAS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-25 21:14:19] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'MONEDAS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-25 21:14:19] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'MONEDAS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-25 21:14:19] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SUBCATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-25 21:14:19] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SUBCATEGORIA_ARTICULOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-25 21:14:19] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SUBCATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-25 21:14:19] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-25 21:14:19] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SUCURSALES' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-25 21:14:19] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-25 21:14:19] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'TIPOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-25 21:14:19] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'TIPOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-25 21:14:19] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'TIPOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-25 21:14:28] doctrine.DEBUG: SELECT name FROM sysobjects WHERE type = 'U' AND name != 'sysdiagrams' AND category != 2 ORDER BY name [] []
[2017-01-25 21:14:28] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'ARTICULOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-25 21:14:28] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'ARTICULOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-25 21:14:28] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'ARTICULOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-25 21:14:29] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_COBROS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-25 21:14:29] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_COBROS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-25 21:14:29] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_COBROS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-25 21:14:29] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-25 21:14:29] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_SERVICIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-25 21:14:29] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-25 21:14:29] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-25 21:14:29] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATEGORIA_ARTICULOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-25 21:14:29] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-25 21:14:29] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-25 21:14:29] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CONSORCIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-25 21:14:29] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-25 21:14:29] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'MONEDAS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-25 21:14:29] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'MONEDAS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-25 21:14:29] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'MONEDAS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-25 21:14:29] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SUBCATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-25 21:14:29] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SUBCATEGORIA_ARTICULOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-25 21:14:29] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SUBCATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-25 21:14:29] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-25 21:14:29] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SUCURSALES' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-25 21:14:29] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-25 21:14:29] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'TIPOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-25 21:14:29] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'TIPOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-25 21:14:29] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'TIPOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-25 21:14:38] doctrine.DEBUG: SELECT name FROM sysobjects WHERE type = 'U' AND name != 'sysdiagrams' AND category != 2 ORDER BY name [] []
[2017-01-25 21:14:38] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'ARTICULOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-25 21:14:38] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'ARTICULOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-25 21:14:38] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'ARTICULOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-25 21:14:38] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_COBROS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-25 21:14:38] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_COBROS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-25 21:14:38] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_COBROS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-25 21:14:38] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-25 21:14:38] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_SERVICIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-25 21:14:38] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-25 21:14:38] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-25 21:14:38] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATEGORIA_ARTICULOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-25 21:14:38] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-25 21:14:38] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-25 21:14:38] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CONSORCIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-25 21:14:38] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-25 21:14:38] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'MONEDAS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-25 21:14:38] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'MONEDAS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-25 21:14:38] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'MONEDAS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-25 21:14:38] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SUBCATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-25 21:14:38] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SUBCATEGORIA_ARTICULOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-25 21:14:38] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SUBCATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-25 21:14:38] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-25 21:14:38] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SUCURSALES' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-25 21:14:38] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-25 21:14:38] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'TIPOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-25 21:14:38] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'TIPOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-25 21:14:38] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'TIPOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-25 21:14:49] doctrine.DEBUG: SELECT name FROM sysobjects WHERE type = 'U' AND name != 'sysdiagrams' AND category != 2 ORDER BY name [] []
[2017-01-25 21:14:49] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'ARTICULOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-25 21:14:50] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'ARTICULOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-25 21:14:50] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'ARTICULOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-25 21:14:50] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_COBROS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-25 21:14:50] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_COBROS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-25 21:14:50] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_COBROS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-25 21:14:50] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-25 21:14:50] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_SERVICIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-25 21:14:50] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-25 21:14:50] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-25 21:14:50] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATEGORIA_ARTICULOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-25 21:14:50] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-25 21:14:50] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-25 21:14:50] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CONSORCIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-25 21:14:50] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-25 21:14:50] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'MONEDAS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-25 21:14:50] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'MONEDAS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-25 21:14:50] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'MONEDAS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-25 21:14:50] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SUBCATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-25 21:14:50] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SUBCATEGORIA_ARTICULOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-25 21:14:50] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SUBCATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-25 21:14:50] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-25 21:14:50] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SUCURSALES' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-25 21:14:50] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-25 21:14:50] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'TIPOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-25 21:14:50] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'TIPOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-25 21:14:50] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'TIPOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-25 21:15:02] doctrine.DEBUG: SELECT name FROM sysobjects WHERE type = 'U' AND name != 'sysdiagrams' AND category != 2 ORDER BY name [] []
[2017-01-25 21:15:02] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'ARTICULOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-25 21:15:03] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'ARTICULOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-25 21:15:03] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'ARTICULOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-25 21:15:03] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_COBROS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-25 21:15:03] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_COBROS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-25 21:15:03] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_COBROS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-25 21:15:03] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-25 21:15:03] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_SERVICIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-25 21:15:03] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-25 21:15:03] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-25 21:15:03] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATEGORIA_ARTICULOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-25 21:15:03] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-25 21:15:03] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-25 21:15:03] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CONSORCIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-25 21:15:03] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-25 21:15:03] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'MONEDAS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-25 21:15:03] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'MONEDAS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-25 21:15:03] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'MONEDAS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-25 21:15:03] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SUBCATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-25 21:15:03] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SUBCATEGORIA_ARTICULOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-25 21:15:03] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SUBCATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-25 21:15:03] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-25 21:15:03] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SUCURSALES' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-25 21:15:03] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-25 21:15:03] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'TIPOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-25 21:15:03] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'TIPOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-25 21:15:03] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'TIPOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-25 21:15:12] doctrine.DEBUG: SELECT name FROM sysobjects WHERE type = 'U' AND name != 'sysdiagrams' AND category != 2 ORDER BY name [] []
[2017-01-25 21:15:12] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'ARTICULOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-25 21:15:12] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'ARTICULOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-25 21:15:12] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'ARTICULOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-25 21:15:12] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_COBROS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-25 21:15:12] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_COBROS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-25 21:15:12] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_COBROS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-25 21:15:12] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-25 21:15:12] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_SERVICIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-25 21:15:12] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-25 21:15:12] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-25 21:15:12] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATEGORIA_ARTICULOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-25 21:15:12] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-25 21:15:12] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-25 21:15:12] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CONSORCIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-25 21:15:12] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-25 21:15:12] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'MONEDAS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-25 21:15:12] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'MONEDAS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-25 21:15:12] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'MONEDAS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-25 21:15:12] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SUBCATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-25 21:15:12] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SUBCATEGORIA_ARTICULOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-25 21:15:12] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SUBCATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-25 21:15:12] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-25 21:15:12] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SUCURSALES' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-25 21:15:12] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-25 21:15:12] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'TIPOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-25 21:15:12] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'TIPOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-25 21:15:12] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'TIPOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-25 21:15:36] doctrine.DEBUG: SELECT name FROM sysobjects WHERE type = 'U' AND name != 'sysdiagrams' AND category != 2 ORDER BY name [] []
[2017-01-25 21:15:36] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'ARTICULOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-25 21:15:36] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'ARTICULOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-25 21:15:36] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'ARTICULOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-25 21:15:36] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_COBROS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-25 21:15:36] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_COBROS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-25 21:15:36] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_COBROS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-25 21:15:36] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-25 21:15:36] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_SERVICIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-25 21:15:36] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-25 21:15:36] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-25 21:15:36] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATEGORIA_ARTICULOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-25 21:15:36] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-25 21:15:36] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-25 21:15:36] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CONSORCIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-25 21:15:36] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-25 21:15:36] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'MONEDAS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-25 21:15:36] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'MONEDAS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-25 21:15:36] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'MONEDAS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-25 21:15:36] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SUBCATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-25 21:15:36] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SUBCATEGORIA_ARTICULOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-25 21:15:36] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SUBCATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-25 21:15:36] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-25 21:15:36] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SUCURSALES' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-25 21:15:36] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-25 21:15:36] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'TIPOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-25 21:15:36] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'TIPOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-25 21:15:36] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'TIPOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-25 21:15:52] doctrine.DEBUG: SELECT name FROM sysobjects WHERE type = 'U' AND name != 'sysdiagrams' AND category != 2 ORDER BY name [] []
[2017-01-25 21:15:52] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'ARTICULOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-25 21:15:52] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'ARTICULOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-25 21:15:52] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'ARTICULOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-25 21:15:52] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_COBROS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-25 21:15:52] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_COBROS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-25 21:15:52] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_COBROS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-25 21:15:52] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-25 21:15:52] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_SERVICIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-25 21:15:52] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-25 21:15:52] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-25 21:15:52] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATEGORIA_ARTICULOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-25 21:15:52] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-25 21:15:52] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-25 21:15:52] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CONSORCIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-25 21:15:52] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-25 21:15:52] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'MONEDAS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-25 21:15:52] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'MONEDAS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-25 21:15:52] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'MONEDAS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-25 21:15:52] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SUBCATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-25 21:15:52] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SUBCATEGORIA_ARTICULOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-25 21:15:52] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SUBCATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-25 21:15:52] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-25 21:15:52] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SUCURSALES' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-25 21:15:52] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-25 21:15:52] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'TIPOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-25 21:15:52] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'TIPOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-25 21:15:52] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'TIPOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-25 21:28:45] doctrine.DEBUG: SELECT name FROM sysobjects WHERE type = 'U' AND name != 'sysdiagrams' AND category != 2 ORDER BY name [] []
[2017-01-25 21:28:45] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'ARTICULOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-25 21:28:46] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'ARTICULOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-25 21:28:46] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'ARTICULOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-25 21:28:46] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_COBROS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-25 21:28:46] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_COBROS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-25 21:28:46] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_COBROS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-25 21:28:46] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-25 21:28:46] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_SERVICIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-25 21:28:46] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-25 21:28:46] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-25 21:28:46] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATEGORIA_ARTICULOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-25 21:28:46] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-25 21:28:46] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-25 21:28:46] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CONSORCIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-25 21:28:46] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-25 21:28:46] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'MONEDAS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-25 21:28:46] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'MONEDAS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-25 21:28:46] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'MONEDAS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-25 21:28:46] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SUBCATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-25 21:28:46] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SUBCATEGORIA_ARTICULOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-25 21:28:46] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SUBCATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-25 21:28:46] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-25 21:28:46] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SUCURSALES' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-25 21:28:46] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-25 21:28:46] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'TIPOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-25 21:28:46] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'TIPOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-25 21:28:46] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'TIPOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-25 21:28:56] doctrine.DEBUG: SELECT name FROM sysobjects WHERE type = 'U' AND name != 'sysdiagrams' AND category != 2 ORDER BY name [] []
[2017-01-25 21:28:56] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'ARTICULOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-25 21:28:56] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'ARTICULOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-25 21:28:56] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'ARTICULOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-25 21:28:56] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_COBROS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-25 21:28:56] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_COBROS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-25 21:28:56] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_COBROS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-25 21:28:56] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-25 21:28:56] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_SERVICIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-25 21:28:56] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-25 21:28:56] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-25 21:28:56] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATEGORIA_ARTICULOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-25 21:28:56] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-25 21:28:56] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-25 21:28:56] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CONSORCIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-25 21:28:56] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-25 21:28:56] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'MONEDAS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-25 21:28:56] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'MONEDAS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-25 21:28:56] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'MONEDAS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-25 21:28:56] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SUBCATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-25 21:28:56] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SUBCATEGORIA_ARTICULOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-25 21:28:56] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SUBCATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-25 21:28:56] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-25 21:28:56] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SUCURSALES' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-25 21:28:56] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-25 21:28:56] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'TIPOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-25 21:28:56] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'TIPOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-25 21:28:56] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'TIPOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-25 21:29:07] doctrine.DEBUG: SELECT name FROM sysobjects WHERE type = 'U' AND name != 'sysdiagrams' AND category != 2 ORDER BY name [] []
[2017-01-25 21:29:07] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'ARTICULOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-25 21:29:07] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'ARTICULOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-25 21:29:07] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'ARTICULOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-25 21:29:07] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_COBROS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-25 21:29:07] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_COBROS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-25 21:29:07] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_COBROS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-25 21:29:07] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-25 21:29:07] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_SERVICIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-25 21:29:07] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-25 21:29:07] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-25 21:29:07] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATEGORIA_ARTICULOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-25 21:29:07] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-25 21:29:07] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-25 21:29:07] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CONSORCIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-25 21:29:07] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-25 21:29:07] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'MONEDAS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-25 21:29:07] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'MONEDAS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-25 21:29:07] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'MONEDAS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-25 21:29:07] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SUBCATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-25 21:29:07] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SUBCATEGORIA_ARTICULOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-25 21:29:07] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SUBCATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-25 21:29:07] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-25 21:29:07] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SUCURSALES' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-25 21:29:07] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-25 21:29:07] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'TIPOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-25 21:29:07] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'TIPOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-25 21:29:07] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'TIPOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-25 21:29:14] doctrine.DEBUG: SELECT name FROM sysobjects WHERE type = 'U' AND name != 'sysdiagrams' AND category != 2 ORDER BY name [] []
[2017-01-25 21:29:14] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'ARTICULOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-25 21:29:14] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'ARTICULOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-25 21:29:14] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'ARTICULOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-25 21:29:14] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_COBROS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-25 21:29:14] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_COBROS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-25 21:29:14] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_COBROS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-25 21:29:14] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-25 21:29:14] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_SERVICIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-25 21:29:14] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-25 21:29:14] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-25 21:29:14] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATEGORIA_ARTICULOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-25 21:29:14] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-25 21:29:14] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-25 21:29:14] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CONSORCIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-25 21:29:14] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-25 21:29:14] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'MONEDAS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-25 21:29:14] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'MONEDAS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-25 21:29:14] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'MONEDAS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-25 21:29:14] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SUBCATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-25 21:29:14] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SUBCATEGORIA_ARTICULOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-25 21:29:14] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SUBCATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-25 21:29:14] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-25 21:29:14] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SUCURSALES' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-25 21:29:14] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-25 21:29:14] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'TIPOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-25 21:29:14] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'TIPOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-25 21:29:14] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'TIPOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-25 21:29:24] doctrine.DEBUG: SELECT name FROM sysobjects WHERE type = 'U' AND name != 'sysdiagrams' AND category != 2 ORDER BY name [] []
[2017-01-25 21:29:24] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'ARTICULOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-25 21:29:24] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'ARTICULOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-25 21:29:24] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'ARTICULOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-25 21:29:24] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_COBROS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-25 21:29:24] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_COBROS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-25 21:29:24] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_COBROS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-25 21:29:24] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-25 21:29:24] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_SERVICIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-25 21:29:24] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-25 21:29:24] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-25 21:29:24] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATEGORIA_ARTICULOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-25 21:29:24] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-25 21:29:24] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-25 21:29:24] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CONSORCIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-25 21:29:24] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-25 21:29:24] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'MONEDAS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-25 21:29:24] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'MONEDAS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-25 21:29:24] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'MONEDAS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-25 21:29:24] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SUBCATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-25 21:29:24] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SUBCATEGORIA_ARTICULOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-25 21:29:24] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SUBCATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-25 21:29:24] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-25 21:29:24] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SUCURSALES' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-25 21:29:24] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-25 21:29:24] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'TIPOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-25 21:29:24] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'TIPOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-25 21:29:24] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'TIPOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-25 21:29:34] doctrine.DEBUG: SELECT name FROM sysobjects WHERE type = 'U' AND name != 'sysdiagrams' AND category != 2 ORDER BY name [] []
[2017-01-25 21:29:34] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'ARTICULOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-25 21:29:34] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'ARTICULOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-25 21:29:34] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'ARTICULOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-25 21:29:34] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_COBROS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-25 21:29:34] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_COBROS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-25 21:29:34] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_COBROS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-25 21:29:34] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-25 21:29:34] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_SERVICIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-25 21:29:34] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-25 21:29:34] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-25 21:29:34] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATEGORIA_ARTICULOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-25 21:29:34] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-25 21:29:34] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-25 21:29:34] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CONSORCIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-25 21:29:34] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-25 21:29:34] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'MONEDAS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-25 21:29:34] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'MONEDAS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-25 21:29:34] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'MONEDAS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-25 21:29:34] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SUBCATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-25 21:29:34] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SUBCATEGORIA_ARTICULOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-25 21:29:34] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SUBCATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-25 21:29:34] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-25 21:29:34] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SUCURSALES' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-25 21:29:34] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-25 21:29:34] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'TIPOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-25 21:29:34] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'TIPOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-25 21:29:34] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'TIPOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-30 16:14:51] doctrine.DEBUG: SELECT name FROM sysobjects WHERE type = 'U' AND name != 'sysdiagrams' AND category != 2 ORDER BY name [] []
[2017-01-30 16:14:51] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'ARTICULOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-30 16:14:51] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'ARTICULOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-30 16:14:51] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'ARTICULOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-30 16:14:51] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_COBROS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-30 16:14:51] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_COBROS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-30 16:14:51] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_COBROS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-30 16:14:51] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-30 16:14:51] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_SERVICIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-30 16:14:51] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-30 16:14:51] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-30 16:14:51] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATEGORIA_ARTICULOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-30 16:14:51] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-30 16:14:51] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-30 16:14:51] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CONSORCIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-30 16:14:51] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-30 16:14:52] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'MONEDAS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-30 16:14:52] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'MONEDAS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-30 16:14:52] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'MONEDAS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-30 16:14:52] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SUBCATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-30 16:14:52] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SUBCATEGORIA_ARTICULOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-30 16:14:52] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SUBCATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-30 16:14:52] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-30 16:14:52] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SUCURSALES' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-30 16:14:52] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-30 16:14:52] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'TIPOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-30 16:14:52] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'TIPOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-30 16:14:52] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'TIPOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-30 16:15:12] doctrine.DEBUG: SELECT name FROM sysobjects WHERE type = 'U' AND name != 'sysdiagrams' AND category != 2 ORDER BY name [] []
[2017-01-30 16:15:12] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'ARTICULOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-30 16:15:12] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'ARTICULOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-30 16:15:12] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'ARTICULOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-30 16:15:12] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_COBROS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-30 16:15:12] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_COBROS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-30 16:15:12] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_COBROS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-30 16:15:12] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-30 16:15:13] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_SERVICIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-30 16:15:13] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-30 16:15:13] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-30 16:15:13] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATEGORIA_ARTICULOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-30 16:15:13] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-30 16:15:13] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-30 16:15:13] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CONSORCIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-30 16:15:13] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-30 16:15:13] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'MONEDAS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-30 16:15:13] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'MONEDAS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-30 16:15:13] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'MONEDAS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-30 16:15:13] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SUBCATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-30 16:15:13] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SUBCATEGORIA_ARTICULOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-30 16:15:13] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SUBCATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-30 16:15:13] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-30 16:15:13] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SUCURSALES' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-30 16:15:13] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-01-30 16:15:13] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'TIPOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-01-30 16:15:13] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'TIPOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-01-30 16:15:13] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'TIPOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 17:24:11] doctrine.DEBUG: SELECT name FROM sysobjects WHERE type = 'U' AND name != 'sysdiagrams' AND category != 2 ORDER BY name [] []
[2017-02-01 17:24:11] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'ARTICULOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 17:24:12] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'ARTICULOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 17:24:12] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'ARTICULOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 17:24:12] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_COBROS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 17:24:12] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_COBROS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 17:24:12] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_COBROS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 17:24:12] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 17:24:12] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_SERVICIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 17:24:12] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 17:24:12] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 17:24:12] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATEGORIA_ARTICULOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 17:24:12] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 17:24:12] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 17:24:12] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CONSORCIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 17:24:12] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 17:24:12] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'ENTRADA' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 17:24:12] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'ENTRADA' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 17:24:12] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'ENTRADA' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 17:24:13] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'MONEDAS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 17:24:13] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'MONEDAS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 17:24:13] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'MONEDAS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 17:24:13] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SALIDA' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 17:24:13] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SALIDA' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 17:24:13] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SALIDA' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 17:24:13] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SUBCATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 17:24:13] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SUBCATEGORIA_ARTICULOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 17:24:13] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SUBCATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 17:24:13] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 17:24:13] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SUCURSALES' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 17:24:13] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 17:24:13] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'TIPOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 17:24:13] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'TIPOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 17:24:13] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'TIPOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 17:26:50] doctrine.DEBUG: SELECT name FROM sysobjects WHERE type = 'U' AND name != 'sysdiagrams' AND category != 2 ORDER BY name [] []
[2017-02-01 17:26:50] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'ARTICULOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 17:26:50] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'ARTICULOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 17:26:50] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'ARTICULOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 17:26:50] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_COBROS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 17:26:50] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_COBROS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 17:26:50] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_COBROS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 17:26:50] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 17:26:50] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_SERVICIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 17:26:50] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 17:26:50] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 17:26:50] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATEGORIA_ARTICULOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 17:26:50] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 17:26:50] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 17:26:50] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CONSORCIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 17:26:50] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 17:26:50] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'ENTRADA' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 17:26:50] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'ENTRADA' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 17:26:50] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'ENTRADA' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 17:26:50] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'MONEDAS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 17:26:50] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'MONEDAS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 17:26:50] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'MONEDAS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 17:26:50] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SALIDA' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 17:26:50] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SALIDA' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 17:26:50] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SALIDA' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 17:26:50] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SUBCATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 17:26:50] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SUBCATEGORIA_ARTICULOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 17:26:50] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SUBCATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 17:26:50] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 17:26:50] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SUCURSALES' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 17:26:50] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 17:26:50] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'TIPOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 17:26:50] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'TIPOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 17:26:50] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'TIPOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 17:27:12] doctrine.DEBUG: SELECT name FROM sysobjects WHERE type = 'U' AND name != 'sysdiagrams' AND category != 2 ORDER BY name [] []
[2017-02-01 17:27:12] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'ARTICULOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 17:27:12] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'ARTICULOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 17:27:12] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'ARTICULOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 17:27:12] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_COBROS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 17:27:12] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_COBROS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 17:27:12] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_COBROS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 17:27:12] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 17:27:12] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_SERVICIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 17:27:12] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 17:27:12] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 17:27:12] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATEGORIA_ARTICULOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 17:27:12] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 17:27:12] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 17:27:12] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CONSORCIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 17:27:12] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 17:27:12] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'ENTRADA' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 17:27:12] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'ENTRADA' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 17:27:12] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'ENTRADA' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 17:27:12] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'MONEDAS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 17:27:12] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'MONEDAS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 17:27:12] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'MONEDAS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 17:27:12] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SALIDA' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 17:27:12] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SALIDA' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 17:27:12] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SALIDA' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 17:27:12] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SUBCATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 17:27:12] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SUBCATEGORIA_ARTICULOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 17:27:12] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SUBCATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 17:27:12] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 17:27:12] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SUCURSALES' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 17:27:12] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 17:27:12] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'TIPOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 17:27:12] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'TIPOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 17:27:12] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'TIPOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 17:27:31] doctrine.DEBUG: SELECT name FROM sysobjects WHERE type = 'U' AND name != 'sysdiagrams' AND category != 2 ORDER BY name [] []
[2017-02-01 17:27:31] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'ARTICULOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 17:27:31] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'ARTICULOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 17:27:31] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'ARTICULOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 17:27:31] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_COBROS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 17:27:31] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_COBROS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 17:27:31] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_COBROS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 17:27:31] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 17:27:31] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_SERVICIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 17:27:31] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 17:27:31] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 17:27:31] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATEGORIA_ARTICULOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 17:27:31] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 17:27:31] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 17:27:31] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CONSORCIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 17:27:31] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 17:27:31] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'ENTRADA' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 17:27:31] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'ENTRADA' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 17:27:31] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'ENTRADA' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 17:27:31] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'MONEDAS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 17:27:31] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'MONEDAS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 17:27:31] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'MONEDAS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 17:27:31] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SALIDA' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 17:27:31] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SALIDA' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 17:27:31] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SALIDA' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 17:27:31] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SUBCATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 17:27:31] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SUBCATEGORIA_ARTICULOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 17:27:31] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SUBCATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 17:27:31] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 17:27:31] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SUCURSALES' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 17:27:31] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 17:27:31] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'TIPOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 17:27:31] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'TIPOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 17:27:31] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'TIPOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 18:49:24] doctrine.DEBUG: SELECT name FROM sysobjects WHERE type = 'U' AND name != 'sysdiagrams' AND category != 2 ORDER BY name [] []
[2017-02-01 18:49:24] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'ARTICULOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 18:49:24] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'ARTICULOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 18:49:24] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'ARTICULOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 18:49:24] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_COBROS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 18:49:24] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_COBROS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 18:49:24] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_COBROS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 18:49:24] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 18:49:24] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_SERVICIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 18:49:24] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 18:49:24] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 18:49:24] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATEGORIA_ARTICULOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 18:49:24] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 18:49:24] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 18:49:24] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CONSORCIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 18:49:24] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 18:49:24] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'ENTRADA' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 18:49:24] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'ENTRADA' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 18:49:24] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'ENTRADA' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 18:49:24] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'ENTRADA_DETALLE' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 18:49:24] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'ENTRADA_DETALLE' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 18:49:24] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'ENTRADA_DETALLE' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 18:49:25] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'MONEDAS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 18:49:25] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'MONEDAS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 18:49:25] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'MONEDAS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 18:49:25] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SALIDA' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 18:49:25] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SALIDA' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 18:49:25] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SALIDA' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 18:49:25] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SALIDA_DETALLE' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 18:49:25] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SALIDA_DETALLE' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 18:49:25] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SALIDA_DETALLE' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 18:49:25] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SOCIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 18:49:25] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SOCIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 18:49:25] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SOCIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 18:49:25] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SUBCATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 18:49:25] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SUBCATEGORIA_ARTICULOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 18:49:25] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SUBCATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 18:49:25] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 18:49:25] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SUCURSALES' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 18:49:25] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 18:49:25] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'TIPOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 18:49:25] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'TIPOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 18:49:25] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'TIPOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 18:49:41] doctrine.DEBUG: SELECT name FROM sysobjects WHERE type = 'U' AND name != 'sysdiagrams' AND category != 2 ORDER BY name [] []
[2017-02-01 18:49:41] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'ARTICULOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 18:49:41] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'ARTICULOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 18:49:41] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'ARTICULOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 18:49:41] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_COBROS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 18:49:41] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_COBROS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 18:49:41] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_COBROS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 18:49:41] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 18:49:41] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_SERVICIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 18:49:41] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 18:49:41] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 18:49:41] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATEGORIA_ARTICULOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 18:49:41] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 18:49:41] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 18:49:41] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CONSORCIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 18:49:41] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 18:49:41] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'ENTRADA' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 18:49:41] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'ENTRADA' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 18:49:41] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'ENTRADA' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 18:49:41] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'ENTRADA_DETALLE' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 18:49:41] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'ENTRADA_DETALLE' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 18:49:41] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'ENTRADA_DETALLE' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 18:49:41] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'MONEDAS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 18:49:41] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'MONEDAS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 18:49:41] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'MONEDAS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 18:49:41] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SALIDA' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 18:49:41] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SALIDA' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 18:49:41] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SALIDA' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 18:49:41] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SALIDA_DETALLE' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 18:49:41] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SALIDA_DETALLE' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 18:49:41] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SALIDA_DETALLE' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 18:49:41] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SOCIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 18:49:41] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SOCIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 18:49:41] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SOCIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 18:49:41] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SUBCATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 18:49:41] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SUBCATEGORIA_ARTICULOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 18:49:41] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SUBCATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 18:49:41] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 18:49:41] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SUCURSALES' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 18:49:41] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 18:49:41] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'TIPOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 18:49:41] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'TIPOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 18:49:41] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'TIPOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 18:50:47] doctrine.DEBUG: SELECT name FROM sysobjects WHERE type = 'U' AND name != 'sysdiagrams' AND category != 2 ORDER BY name [] []
[2017-02-01 18:50:47] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'ARTICULOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 18:50:47] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'ARTICULOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 18:50:47] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'ARTICULOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 18:50:47] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_COBROS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 18:50:47] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_COBROS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 18:50:47] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_COBROS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 18:50:47] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 18:50:47] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_SERVICIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 18:50:47] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 18:50:47] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 18:50:47] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATEGORIA_ARTICULOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 18:50:47] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 18:50:47] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 18:50:47] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CONSORCIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 18:50:47] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 18:50:47] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'ENTRADA' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 18:50:47] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'ENTRADA' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 18:50:47] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'ENTRADA' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 18:50:47] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'ENTRADA_DETALLE' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 18:50:47] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'ENTRADA_DETALLE' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 18:50:47] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'ENTRADA_DETALLE' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 18:50:47] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'MONEDAS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 18:50:47] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'MONEDAS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 18:50:47] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'MONEDAS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 18:50:47] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SALIDA' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 18:50:47] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SALIDA' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 18:50:47] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SALIDA' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 18:50:47] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SALIDA_DETALLE' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 18:50:47] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SALIDA_DETALLE' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 18:50:47] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SALIDA_DETALLE' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 18:50:47] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SOCIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 18:50:47] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SOCIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 18:50:47] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SOCIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 18:50:47] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SUBCATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 18:50:47] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SUBCATEGORIA_ARTICULOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 18:50:47] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SUBCATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 18:50:47] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 18:50:47] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SUCURSALES' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 18:50:47] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 18:50:47] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'TIPOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 18:50:47] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'TIPOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 18:50:47] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'TIPOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 18:51:04] doctrine.DEBUG: SELECT name FROM sysobjects WHERE type = 'U' AND name != 'sysdiagrams' AND category != 2 ORDER BY name [] []
[2017-02-01 18:51:04] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'ARTICULOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 18:51:04] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'ARTICULOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 18:51:04] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'ARTICULOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 18:51:04] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_COBROS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 18:51:04] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_COBROS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 18:51:04] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_COBROS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 18:51:04] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 18:51:04] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_SERVICIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 18:51:04] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 18:51:04] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 18:51:04] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATEGORIA_ARTICULOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 18:51:04] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 18:51:04] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 18:51:04] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CONSORCIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 18:51:04] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 18:51:04] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'ENTRADA' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 18:51:04] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'ENTRADA' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 18:51:04] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'ENTRADA' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 18:51:04] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'ENTRADA_DETALLE' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 18:51:04] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'ENTRADA_DETALLE' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 18:51:04] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'ENTRADA_DETALLE' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 18:51:04] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'MONEDAS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 18:51:04] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'MONEDAS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 18:51:04] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'MONEDAS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 18:51:04] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SALIDA' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 18:51:04] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SALIDA' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 18:51:04] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SALIDA' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 18:51:04] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SALIDA_DETALLE' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 18:51:04] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SALIDA_DETALLE' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 18:51:04] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SALIDA_DETALLE' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 18:51:04] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SOCIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 18:51:04] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SOCIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 18:51:04] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SOCIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 18:51:04] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SUBCATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 18:51:04] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SUBCATEGORIA_ARTICULOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 18:51:04] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SUBCATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 18:51:04] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 18:51:04] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SUCURSALES' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 18:51:04] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 18:51:04] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'TIPOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 18:51:04] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'TIPOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 18:51:04] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'TIPOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 18:51:45] doctrine.DEBUG: SELECT name FROM sysobjects WHERE type = 'U' AND name != 'sysdiagrams' AND category != 2 ORDER BY name [] []
[2017-02-01 18:51:45] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'ARTICULOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 18:51:45] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'ARTICULOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 18:51:45] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'ARTICULOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 18:51:45] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_COBROS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 18:51:45] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_COBROS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 18:51:45] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_COBROS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 18:51:45] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 18:51:45] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_SERVICIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 18:51:45] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 18:51:45] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 18:51:45] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATEGORIA_ARTICULOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 18:51:45] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 18:51:45] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 18:51:45] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CONSORCIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 18:51:45] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 18:51:45] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'ENTRADA' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 18:51:45] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'ENTRADA' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 18:51:45] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'ENTRADA' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 18:51:45] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'ENTRADA_DETALLE' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 18:51:45] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'ENTRADA_DETALLE' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 18:51:45] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'ENTRADA_DETALLE' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 18:51:45] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'MONEDAS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 18:51:45] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'MONEDAS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 18:51:45] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'MONEDAS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 18:51:45] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SALIDA' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 18:51:45] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SALIDA' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 18:51:45] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SALIDA' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 18:51:45] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SALIDA_DETALLE' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 18:51:45] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SALIDA_DETALLE' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 18:51:45] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SALIDA_DETALLE' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 18:51:45] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SOCIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 18:51:45] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SOCIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 18:51:45] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SOCIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 18:51:45] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SUBCATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 18:51:45] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SUBCATEGORIA_ARTICULOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 18:51:45] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SUBCATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 18:51:45] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 18:51:45] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SUCURSALES' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 18:51:45] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 18:51:45] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'TIPOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 18:51:45] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'TIPOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 18:51:45] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'TIPOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 18:54:43] doctrine.DEBUG: SELECT name FROM sysobjects WHERE type = 'U' AND name != 'sysdiagrams' AND category != 2 ORDER BY name [] []
[2017-02-01 18:54:43] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'ARTICULOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 18:54:43] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'ARTICULOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 18:54:43] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'ARTICULOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 18:54:43] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_COBROS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 18:54:43] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_COBROS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 18:54:43] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_COBROS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 18:54:43] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 18:54:43] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_SERVICIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 18:54:43] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 18:54:43] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 18:54:43] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATEGORIA_ARTICULOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 18:54:43] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 18:54:43] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 18:54:43] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CONSORCIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 18:54:43] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 18:54:43] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'ENTRADA' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 18:54:43] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'ENTRADA' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 18:54:43] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'ENTRADA' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 18:54:43] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'ENTRADA_DETALLE' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 18:54:43] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'ENTRADA_DETALLE' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 18:54:43] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'ENTRADA_DETALLE' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 18:54:43] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'MONEDAS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 18:54:43] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'MONEDAS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 18:54:43] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'MONEDAS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 18:54:43] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SALIDA' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 18:54:43] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SALIDA' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 18:54:43] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SALIDA' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 18:54:43] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SALIDA_DETALLE' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 18:54:43] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SALIDA_DETALLE' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 18:54:43] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SALIDA_DETALLE' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 18:54:43] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SOCIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 18:54:43] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SOCIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 18:54:43] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SOCIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 18:54:43] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SUBCATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 18:54:43] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SUBCATEGORIA_ARTICULOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 18:54:43] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SUBCATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 18:54:43] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 18:54:43] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SUCURSALES' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 18:54:43] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 18:54:43] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'TIPOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 18:54:43] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'TIPOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 18:54:43] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'TIPOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 18:54:48] doctrine.DEBUG: SELECT name FROM sysobjects WHERE type = 'U' AND name != 'sysdiagrams' AND category != 2 ORDER BY name [] []
[2017-02-01 18:54:48] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'ARTICULOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 18:54:49] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'ARTICULOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 18:54:49] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'ARTICULOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 18:54:49] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_COBROS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 18:54:49] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_COBROS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 18:54:49] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_COBROS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 18:54:49] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 18:54:49] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_SERVICIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 18:54:49] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 18:54:49] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 18:54:49] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATEGORIA_ARTICULOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 18:54:49] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 18:54:49] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 18:54:49] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CONSORCIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 18:54:49] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 18:54:49] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'ENTRADA' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 18:54:49] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'ENTRADA' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 18:54:49] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'ENTRADA' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 18:54:49] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'ENTRADA_DETALLE' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 18:54:49] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'ENTRADA_DETALLE' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 18:54:49] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'ENTRADA_DETALLE' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 18:54:49] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'MONEDAS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 18:54:49] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'MONEDAS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 18:54:49] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'MONEDAS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 18:54:49] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SALIDA' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 18:54:49] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SALIDA' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 18:54:49] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SALIDA' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 18:54:49] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SALIDA_DETALLE' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 18:54:49] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SALIDA_DETALLE' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 18:54:49] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SALIDA_DETALLE' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 18:54:49] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SOCIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 18:54:49] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SOCIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 18:54:49] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SOCIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 18:54:49] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SUBCATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 18:54:49] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SUBCATEGORIA_ARTICULOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 18:54:49] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SUBCATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 18:54:49] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 18:54:49] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SUCURSALES' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 18:54:49] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 18:54:49] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'TIPOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 18:54:49] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'TIPOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 18:54:49] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'TIPOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 23:41:10] doctrine.DEBUG: SELECT name FROM sysobjects WHERE type = 'U' AND name != 'sysdiagrams' AND category != 2 ORDER BY name [] []
[2017-02-01 23:41:11] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'ARTICULOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 23:41:11] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'ARTICULOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 23:41:11] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'ARTICULOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 23:41:11] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'BODEGAS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 23:41:11] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'BODEGAS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 23:41:11] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'BODEGAS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 23:41:11] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_COBROS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 23:41:11] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_COBROS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 23:41:11] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_COBROS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 23:41:11] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 23:41:11] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_SERVICIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 23:41:11] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 23:41:11] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 23:41:11] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATEGORIA_ARTICULOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 23:41:11] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 23:41:11] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 23:41:11] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CONSORCIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 23:41:11] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 23:41:11] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'ENTRADA' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 23:41:11] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'ENTRADA' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 23:41:11] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'ENTRADA' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 23:41:11] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'ENTRADA_DETALLE' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 23:41:11] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'ENTRADA_DETALLE' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 23:41:12] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'ENTRADA_DETALLE' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 23:41:12] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'MONEDAS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 23:41:12] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'MONEDAS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 23:41:12] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'MONEDAS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 23:41:12] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SALIDA' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 23:41:12] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SALIDA' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 23:41:12] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SALIDA' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 23:41:12] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SALIDA_DETALLE' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 23:41:12] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SALIDA_DETALLE' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 23:41:12] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SALIDA_DETALLE' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 23:41:12] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SOCIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 23:41:12] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SOCIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 23:41:12] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SOCIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 23:41:12] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SUBCATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 23:41:12] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SUBCATEGORIA_ARTICULOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 23:41:12] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SUBCATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 23:41:12] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 23:41:12] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SUCURSALES' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 23:41:12] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 23:41:12] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'TIPOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 23:41:12] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'TIPOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 23:41:12] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'TIPOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 23:41:25] doctrine.DEBUG: SELECT name FROM sysobjects WHERE type = 'U' AND name != 'sysdiagrams' AND category != 2 ORDER BY name [] []
[2017-02-01 23:41:25] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'ARTICULOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 23:41:25] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'ARTICULOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 23:41:25] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'ARTICULOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 23:41:25] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'BODEGAS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 23:41:25] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'BODEGAS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 23:41:25] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'BODEGAS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 23:41:25] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_COBROS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 23:41:25] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_COBROS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 23:41:25] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_COBROS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 23:41:25] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 23:41:25] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_SERVICIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 23:41:25] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 23:41:25] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 23:41:25] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATEGORIA_ARTICULOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 23:41:25] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 23:41:25] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 23:41:25] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CONSORCIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 23:41:25] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 23:41:25] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'ENTRADA' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 23:41:25] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'ENTRADA' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 23:41:25] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'ENTRADA' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 23:41:25] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'ENTRADA_DETALLE' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 23:41:25] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'ENTRADA_DETALLE' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 23:41:25] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'ENTRADA_DETALLE' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 23:41:25] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'MONEDAS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 23:41:25] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'MONEDAS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 23:41:25] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'MONEDAS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 23:41:25] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SALIDA' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 23:41:25] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SALIDA' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 23:41:25] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SALIDA' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 23:41:25] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SALIDA_DETALLE' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 23:41:25] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SALIDA_DETALLE' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 23:41:25] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SALIDA_DETALLE' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 23:41:25] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SOCIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 23:41:25] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SOCIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 23:41:25] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SOCIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 23:41:25] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SUBCATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 23:41:25] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SUBCATEGORIA_ARTICULOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 23:41:25] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SUBCATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 23:41:25] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 23:41:25] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SUCURSALES' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 23:41:25] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-01 23:41:25] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'TIPOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-01 23:41:25] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'TIPOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-01 23:41:25] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'TIPOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-10 22:35:04] doctrine.DEBUG: SELECT name FROM sysobjects WHERE type = 'U' AND name != 'sysdiagrams' AND category != 2 ORDER BY name [] []
[2017-02-10 22:35:04] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'ARTICULOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-10 22:35:04] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'ARTICULOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-10 22:35:04] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'ARTICULOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-10 22:35:05] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'BODEGAS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-10 22:35:05] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'BODEGAS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-10 22:35:05] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'BODEGAS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-10 22:35:05] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_COBROS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-10 22:35:05] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_COBROS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-10 22:35:05] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_COBROS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-10 22:35:05] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-10 22:35:05] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_SERVICIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-10 22:35:05] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-10 22:35:05] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-10 22:35:05] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATEGORIA_ARTICULOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-10 22:35:05] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-10 22:35:05] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-10 22:35:05] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CONSORCIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-10 22:35:05] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-10 22:35:05] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'ENTRADA' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-10 22:35:05] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'ENTRADA' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-10 22:35:05] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'ENTRADA' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-10 22:35:05] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'ENTRADA_DETALLE' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-10 22:35:05] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'ENTRADA_DETALLE' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-10 22:35:05] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'ENTRADA_DETALLE' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-10 22:35:05] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'MONEDAS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-10 22:35:05] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'MONEDAS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-10 22:35:05] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'MONEDAS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-10 22:35:05] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SALIDA' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-10 22:35:05] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SALIDA' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-10 22:35:05] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SALIDA' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-10 22:35:06] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SALIDA_DETALLE' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-10 22:35:06] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SALIDA_DETALLE' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-10 22:35:06] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SALIDA_DETALLE' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-10 22:35:06] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SOCIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-10 22:35:06] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SOCIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-10 22:35:06] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SOCIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-10 22:35:06] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SUBCATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-10 22:35:06] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SUBCATEGORIA_ARTICULOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-10 22:35:06] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SUBCATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-10 22:35:06] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-10 22:35:06] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SUCURSALES' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-10 22:35:06] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-10 22:35:06] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'TIPOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-10 22:36:05] doctrine.DEBUG: SELECT name FROM sysobjects WHERE type = 'U' AND name != 'sysdiagrams' AND category != 2 ORDER BY name [] []
[2017-02-10 22:36:05] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'ARTICULOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-10 22:36:05] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'ARTICULOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-10 22:36:05] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'ARTICULOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-10 22:36:05] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'BODEGAS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-10 22:36:05] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'BODEGAS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-10 22:36:05] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'BODEGAS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-10 22:36:05] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_COBROS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-10 22:36:05] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_COBROS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-10 22:36:05] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_COBROS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-10 22:36:05] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-10 22:36:05] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_SERVICIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-10 22:36:05] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-10 22:36:05] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-10 22:36:05] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATEGORIA_ARTICULOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-10 22:36:05] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-10 22:36:05] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-10 22:36:05] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CONSORCIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-10 22:36:05] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-10 22:36:05] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'ENTRADA' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-10 22:36:05] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'ENTRADA' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-10 22:36:05] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'ENTRADA' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-10 22:36:05] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'ENTRADA_DETALLE' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-10 22:36:05] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'ENTRADA_DETALLE' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-10 22:36:05] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'ENTRADA_DETALLE' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-10 22:36:05] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'MONEDAS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-10 22:36:05] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'MONEDAS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-10 22:36:05] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'MONEDAS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-10 22:36:05] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SALIDA' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-10 22:36:05] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SALIDA' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-10 22:36:05] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SALIDA' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-10 22:36:05] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SALIDA_DETALLE' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-10 22:36:05] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SALIDA_DETALLE' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-10 22:36:05] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SALIDA_DETALLE' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-10 22:36:05] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SOCIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-10 22:36:05] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SOCIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-10 22:36:05] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SOCIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-10 22:36:05] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SUBCATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-10 22:36:05] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SUBCATEGORIA_ARTICULOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-10 22:36:05] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SUBCATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-10 22:36:05] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-10 22:36:05] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SUCURSALES' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-10 22:36:05] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-10 22:36:05] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'TIPOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-10 22:36:06] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'TIPOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-10 22:36:06] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'TIPOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-10 22:36:06] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'USUARIO_SUCURSALES' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-10 22:36:06] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'USUARIO_SUCURSALES' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-10 22:36:06] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'USUARIO_SUCURSALES' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-10 22:36:06] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'USUARIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-10 22:36:06] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'USUARIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-10 22:36:06] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'USUARIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-10 22:36:25] doctrine.DEBUG: SELECT name FROM sysobjects WHERE type = 'U' AND name != 'sysdiagrams' AND category != 2 ORDER BY name [] []
[2017-02-10 22:36:25] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'ARTICULOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-10 22:36:25] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'ARTICULOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-10 22:36:25] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'ARTICULOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-10 22:36:25] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'BODEGAS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-10 22:36:25] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'BODEGAS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-10 22:36:25] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'BODEGAS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-10 22:36:25] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_COBROS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-10 22:36:25] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_COBROS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-10 22:36:25] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_COBROS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-10 22:36:25] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-10 22:36:25] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_SERVICIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-10 22:36:25] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-10 22:36:25] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-10 22:36:25] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATEGORIA_ARTICULOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-10 22:36:25] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-10 22:36:25] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-10 22:36:25] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CONSORCIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-10 22:36:25] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-10 22:36:25] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'ENTRADA' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-10 22:36:25] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'ENTRADA' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-10 22:36:25] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'ENTRADA' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-10 22:36:25] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'ENTRADA_DETALLE' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-10 22:36:25] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'ENTRADA_DETALLE' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-10 22:36:25] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'ENTRADA_DETALLE' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-10 22:36:25] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'MONEDAS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-10 22:36:25] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'MONEDAS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-10 22:36:25] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'MONEDAS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-10 22:36:25] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SALIDA' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-10 22:36:25] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SALIDA' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-10 22:36:25] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SALIDA' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-10 22:36:25] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SALIDA_DETALLE' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-10 22:36:25] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SALIDA_DETALLE' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-10 22:36:25] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SALIDA_DETALLE' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-10 22:36:25] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SOCIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-10 22:36:25] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SOCIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-10 22:36:25] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SOCIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-10 22:36:25] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SUBCATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-10 22:36:25] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SUBCATEGORIA_ARTICULOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-10 22:36:25] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SUBCATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-10 22:36:25] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-10 22:36:25] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SUCURSALES' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-10 22:36:25] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-10 22:36:25] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'TIPOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-10 22:36:25] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'TIPOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-10 22:36:25] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'TIPOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-10 22:36:25] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'USUARIO_SUCURSALES' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-10 22:36:25] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'USUARIO_SUCURSALES' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-10 22:36:25] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'USUARIO_SUCURSALES' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-10 22:36:25] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'USUARIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-10 22:36:25] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'USUARIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-10 22:36:25] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'USUARIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-10 22:36:43] doctrine.DEBUG: SELECT name FROM sysobjects WHERE type = 'U' AND name != 'sysdiagrams' AND category != 2 ORDER BY name [] []
[2017-02-10 22:36:43] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'ARTICULOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-10 22:36:43] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'ARTICULOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-10 22:36:43] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'ARTICULOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-10 22:36:43] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'BODEGAS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-10 22:36:43] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'BODEGAS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-10 22:36:43] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'BODEGAS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-10 22:36:43] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_COBROS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-10 22:36:43] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_COBROS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-10 22:36:43] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_COBROS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-10 22:36:43] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-10 22:36:43] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_SERVICIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-10 22:36:43] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-10 22:36:43] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-10 22:36:43] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATEGORIA_ARTICULOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-10 22:36:43] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-10 22:36:43] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-10 22:36:43] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CONSORCIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-10 22:36:43] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-10 22:36:43] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'ENTRADA' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-10 22:36:43] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'ENTRADA' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-10 22:36:43] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'ENTRADA' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-10 22:36:43] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'ENTRADA_DETALLE' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-10 22:36:43] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'ENTRADA_DETALLE' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-10 22:36:43] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'ENTRADA_DETALLE' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-10 22:36:43] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'MONEDAS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-10 22:36:43] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'MONEDAS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-10 22:36:43] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'MONEDAS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-10 22:36:43] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SALIDA' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-10 22:36:43] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SALIDA' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-10 22:36:43] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SALIDA' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-10 22:36:43] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SALIDA_DETALLE' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-10 22:36:43] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SALIDA_DETALLE' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-10 22:36:43] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SALIDA_DETALLE' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-10 22:36:44] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SOCIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-10 22:36:44] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SOCIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-10 22:36:44] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SOCIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-10 22:36:44] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SUBCATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-10 22:36:44] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SUBCATEGORIA_ARTICULOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-10 22:36:44] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SUBCATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-10 22:36:44] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-10 22:36:44] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SUCURSALES' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-10 22:36:44] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-10 22:36:44] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'TIPOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-10 22:36:44] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'TIPOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-10 22:36:44] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'TIPOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-10 22:36:44] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'USUARIO_SUCURSALES' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-10 22:36:44] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'USUARIO_SUCURSALES' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-10 22:36:44] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'USUARIO_SUCURSALES' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-10 22:36:44] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'USUARIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-10 22:36:44] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'USUARIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-10 22:36:44] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'USUARIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-10 22:37:07] doctrine.DEBUG: SELECT name FROM sysobjects WHERE type = 'U' AND name != 'sysdiagrams' AND category != 2 ORDER BY name [] []
[2017-02-10 22:37:08] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'ARTICULOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-10 22:37:08] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'ARTICULOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-10 22:37:08] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'ARTICULOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-10 22:37:08] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'BODEGAS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-10 22:37:08] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'BODEGAS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-10 22:37:08] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'BODEGAS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-10 22:37:08] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_COBROS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-10 22:37:08] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_COBROS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-10 22:37:08] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_COBROS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-10 22:37:08] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-10 22:37:08] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_SERVICIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-10 22:37:08] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-10 22:37:08] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-10 22:37:08] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATEGORIA_ARTICULOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-10 22:37:08] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-10 22:37:08] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-10 22:37:08] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CONSORCIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-10 22:37:08] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-10 22:37:08] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'ENTRADA' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-10 22:37:08] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'ENTRADA' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-10 22:37:08] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'ENTRADA' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-10 22:37:08] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'ENTRADA_DETALLE' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-10 22:37:08] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'ENTRADA_DETALLE' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-10 22:37:08] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'ENTRADA_DETALLE' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-10 22:37:08] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'MONEDAS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-10 22:37:08] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'MONEDAS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-10 22:37:08] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'MONEDAS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-10 22:37:08] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SALIDA' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-10 22:37:08] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SALIDA' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-10 22:37:08] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SALIDA' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-10 22:37:08] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SALIDA_DETALLE' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-10 22:37:08] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SALIDA_DETALLE' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-10 22:37:08] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SALIDA_DETALLE' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-10 22:37:08] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SOCIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-10 22:37:08] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SOCIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-10 22:37:08] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SOCIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-10 22:37:08] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SUBCATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-10 22:37:08] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SUBCATEGORIA_ARTICULOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-10 22:37:08] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SUBCATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-10 22:37:08] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-10 22:37:08] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SUCURSALES' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-10 22:37:08] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-10 22:37:08] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'TIPOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-10 22:37:08] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'TIPOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-10 22:37:08] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'TIPOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-10 22:37:08] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'USUARIO_SUCURSALES' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-10 22:37:08] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'USUARIO_SUCURSALES' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-10 22:37:08] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'USUARIO_SUCURSALES' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-10 22:37:08] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'USUARIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-10 22:37:08] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'USUARIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-10 22:37:08] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'USUARIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-28 16:30:01] doctrine.DEBUG: SELECT name FROM sysobjects WHERE type = 'U' AND name != 'sysdiagrams' AND category != 2 ORDER BY name [] []
[2017-02-28 16:30:01] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'ARTICULOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-28 16:30:05] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'ARTICULOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-28 16:30:05] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'ARTICULOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-28 16:30:06] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'BODEGAS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-28 16:30:06] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'BODEGAS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-28 16:30:06] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'BODEGAS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-28 16:30:06] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_COBROS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-28 16:30:06] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_COBROS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-28 16:30:06] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_COBROS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-28 16:30:06] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-28 16:30:06] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_SERVICIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-28 16:30:06] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-28 16:30:06] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-28 16:30:06] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATEGORIA_ARTICULOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-28 16:30:06] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-28 16:30:06] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-28 16:30:06] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CONSORCIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-28 16:30:06] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-28 16:30:06] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'ENTRADA' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-28 16:30:06] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'ENTRADA' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-28 16:30:06] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'ENTRADA' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-28 16:30:06] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'ENTRADA_DETALLE' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-28 16:30:06] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'ENTRADA_DETALLE' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-28 16:30:06] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'ENTRADA_DETALLE' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-28 16:30:06] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'MONEDAS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-28 16:30:06] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'MONEDAS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-28 16:30:07] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'MONEDAS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-28 16:30:07] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SALIDA' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-28 16:30:07] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SALIDA' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-28 16:30:07] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SALIDA' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-28 16:30:07] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SALIDA_DETALLE' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-28 16:30:07] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SALIDA_DETALLE' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-28 16:30:07] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SALIDA_DETALLE' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-28 16:30:07] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SOCIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-28 16:30:07] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SOCIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-28 16:30:07] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SOCIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-28 16:30:07] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SUBCATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-28 16:30:07] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SUBCATEGORIA_ARTICULOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-28 16:30:07] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SUBCATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-28 16:30:07] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-28 16:30:07] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SUCURSALES' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-28 16:30:07] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-28 16:30:07] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'TIPOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-28 16:30:07] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'TIPOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-28 16:30:07] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'TIPOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-28 16:30:07] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'USUARIO_SUCURSALES' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-28 16:30:07] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'USUARIO_SUCURSALES' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-28 16:30:07] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'USUARIO_SUCURSALES' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-28 16:30:07] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'USUARIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-28 16:30:07] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'USUARIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-28 16:30:07] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'USUARIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-28 16:30:56] doctrine.DEBUG: SELECT name FROM sysobjects WHERE type = 'U' AND name != 'sysdiagrams' AND category != 2 ORDER BY name [] []
[2017-02-28 16:30:56] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'ARTICULOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-28 16:30:56] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'ARTICULOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-28 16:30:56] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'ARTICULOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-28 16:30:56] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'BODEGAS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-28 16:30:56] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'BODEGAS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-28 16:30:56] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'BODEGAS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-28 16:30:56] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_COBROS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-28 16:30:56] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_COBROS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-28 16:30:56] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_COBROS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-28 16:30:56] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-28 16:30:56] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_SERVICIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-28 16:30:56] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-28 16:30:56] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-28 16:30:56] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATEGORIA_ARTICULOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-28 16:30:56] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-28 16:30:56] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-28 16:30:56] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CONSORCIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-28 16:30:56] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-28 16:30:56] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'ENTRADA' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-28 16:30:56] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'ENTRADA' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-28 16:30:56] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'ENTRADA' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-28 16:30:56] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'ENTRADA_DETALLE' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-28 16:30:56] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'ENTRADA_DETALLE' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-28 16:30:56] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'ENTRADA_DETALLE' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-28 16:30:56] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'MONEDAS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-28 16:30:56] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'MONEDAS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-28 16:30:56] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'MONEDAS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-28 16:30:56] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SALIDA' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-28 16:30:56] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SALIDA' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-28 16:30:56] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SALIDA' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-28 16:30:56] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SALIDA_DETALLE' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-28 16:30:56] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SALIDA_DETALLE' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-28 16:30:56] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SALIDA_DETALLE' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-28 16:30:56] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SOCIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-28 16:30:56] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SOCIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-28 16:30:56] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SOCIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-28 16:30:56] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SUBCATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-28 16:30:56] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SUBCATEGORIA_ARTICULOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-28 16:30:56] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SUBCATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-28 16:30:56] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-28 16:30:56] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SUCURSALES' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-28 16:30:56] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-28 16:30:56] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'TIPOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-28 16:30:56] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'TIPOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-28 16:30:56] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'TIPOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-28 16:30:56] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'USUARIO_SUCURSALES' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-28 16:30:56] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'USUARIO_SUCURSALES' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-28 16:30:56] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'USUARIO_SUCURSALES' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-28 16:30:56] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'USUARIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-28 16:30:56] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'USUARIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-28 16:30:56] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'USUARIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-28 16:31:14] doctrine.DEBUG: SELECT name FROM sysobjects WHERE type = 'U' AND name != 'sysdiagrams' AND category != 2 ORDER BY name [] []
[2017-02-28 16:31:14] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'ARTICULOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-28 16:31:14] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'ARTICULOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-28 16:31:14] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'ARTICULOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-28 16:31:14] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'BODEGAS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-28 16:31:14] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'BODEGAS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-28 16:31:14] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'BODEGAS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-28 16:31:14] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_COBROS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-28 16:31:14] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_COBROS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-28 16:31:14] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_COBROS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-28 16:31:14] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-28 16:31:14] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_SERVICIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-28 16:31:14] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-28 16:31:14] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-28 16:31:14] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATEGORIA_ARTICULOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-28 16:31:14] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-28 16:31:14] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-28 16:31:14] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CONSORCIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-28 16:31:14] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-28 16:31:14] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'ENTRADA' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-28 16:31:14] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'ENTRADA' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-28 16:31:14] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'ENTRADA' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-28 16:31:14] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'ENTRADA_DETALLE' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-28 16:31:14] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'ENTRADA_DETALLE' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-28 16:31:14] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'ENTRADA_DETALLE' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-28 16:31:14] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'MONEDAS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-28 16:31:14] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'MONEDAS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-28 16:31:15] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'MONEDAS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-28 16:31:15] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SALIDA' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-28 16:31:15] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SALIDA' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-28 16:31:15] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SALIDA' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-28 16:31:15] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SALIDA_DETALLE' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-28 16:31:15] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SALIDA_DETALLE' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-28 16:31:15] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SALIDA_DETALLE' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-28 16:31:15] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SOCIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-28 16:31:15] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SOCIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-28 16:31:15] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SOCIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-28 16:31:15] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SUBCATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-28 16:31:15] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SUBCATEGORIA_ARTICULOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-28 16:31:15] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SUBCATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-28 16:31:15] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-28 16:31:15] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SUCURSALES' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-28 16:31:15] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-28 16:31:15] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'TIPOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-28 16:31:15] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'TIPOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-28 16:31:15] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'TIPOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-28 16:31:15] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'USUARIO_SUCURSALES' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-28 16:31:15] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'USUARIO_SUCURSALES' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-28 16:31:15] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'USUARIO_SUCURSALES' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-28 16:31:15] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'USUARIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-28 16:31:15] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'USUARIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-28 16:31:15] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'USUARIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-28 16:32:28] doctrine.DEBUG: SELECT name FROM sysobjects WHERE type = 'U' AND name != 'sysdiagrams' AND category != 2 ORDER BY name [] []
[2017-02-28 16:32:28] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'ARTICULOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-28 16:32:29] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'ARTICULOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-28 16:32:29] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'ARTICULOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-28 16:32:29] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'BODEGAS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-28 16:32:29] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'BODEGAS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-28 16:32:29] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'BODEGAS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-28 16:32:29] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_COBROS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-28 16:32:29] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_COBROS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-28 16:32:29] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_COBROS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-28 16:32:29] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-28 16:32:29] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_SERVICIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-28 16:32:29] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-28 16:32:29] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-28 16:32:29] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATEGORIA_ARTICULOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-28 16:32:29] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-28 16:32:29] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-28 16:32:29] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CONSORCIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-28 16:32:29] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-28 16:32:29] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'ENTRADA' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-28 16:32:29] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'ENTRADA' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-28 16:32:29] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'ENTRADA' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-28 16:32:29] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'ENTRADA_DETALLE' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-28 16:32:29] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'ENTRADA_DETALLE' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-28 16:32:29] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'ENTRADA_DETALLE' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-28 16:32:29] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'MONEDAS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-28 16:32:29] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'MONEDAS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-28 16:32:29] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'MONEDAS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-28 16:32:29] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SALIDA' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-28 16:32:29] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SALIDA' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-28 16:32:29] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SALIDA' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-28 16:32:29] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SALIDA_DETALLE' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-28 16:32:29] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SALIDA_DETALLE' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-28 16:32:29] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SALIDA_DETALLE' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-28 16:32:29] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SOCIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-28 16:32:29] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SOCIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-28 16:32:29] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SOCIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-28 16:32:29] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SUBCATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-28 16:32:29] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SUBCATEGORIA_ARTICULOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-28 16:32:29] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SUBCATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-28 16:32:29] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-28 16:32:29] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SUCURSALES' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-28 16:32:29] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-28 16:32:29] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'TIPOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-28 16:32:29] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'TIPOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-28 16:32:29] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'TIPOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-28 16:32:29] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'USUARIO_SUCURSALES' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-28 16:32:29] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'USUARIO_SUCURSALES' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-28 16:32:29] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'USUARIO_SUCURSALES' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-02-28 16:32:29] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'USUARIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-02-28 16:32:29] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'USUARIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-02-28 16:32:29] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'USUARIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-03-07 17:11:15] doctrine.DEBUG: SELECT name FROM sysobjects WHERE type = 'U' AND name != 'sysdiagrams' AND category != 2 ORDER BY name [] []
[2017-03-07 17:11:16] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'ARTICULOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-03-07 17:11:16] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'ARTICULOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-03-07 17:11:17] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'ARTICULOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-03-07 17:11:17] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'BODEGAS' AND scm.name = SCHEMA_NAME()) [] []
[2017-03-07 17:11:18] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'BODEGAS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-03-07 17:11:18] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'BODEGAS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-03-07 17:11:18] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_COBROS' AND scm.name = SCHEMA_NAME()) [] []
[2017-03-07 17:11:19] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_COBROS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-03-07 17:11:19] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_COBROS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-03-07 17:11:19] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-03-07 17:11:20] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_SERVICIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-03-07 17:11:20] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-03-07 17:11:20] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-03-07 17:11:21] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATEGORIA_ARTICULOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-03-07 17:11:21] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-03-07 17:11:21] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-03-07 17:11:22] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CONSORCIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-03-07 17:11:22] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-03-07 17:11:22] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'ENTRADA' AND scm.name = SCHEMA_NAME()) [] []
[2017-03-07 17:11:23] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'ENTRADA' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-03-07 17:11:23] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'ENTRADA' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-03-07 17:11:23] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'ENTRADA_DETALLE' AND scm.name = SCHEMA_NAME()) [] []
[2017-03-07 17:11:24] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'ENTRADA_DETALLE' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-03-07 17:11:24] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'ENTRADA_DETALLE' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-03-07 17:11:24] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'MONEDAS' AND scm.name = SCHEMA_NAME()) [] []
[2017-03-07 17:11:25] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'MONEDAS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-03-07 17:11:25] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'MONEDAS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-03-07 17:11:25] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SALIDA' AND scm.name = SCHEMA_NAME()) [] []
[2017-03-07 17:11:26] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SALIDA' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-03-07 17:11:26] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SALIDA' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-03-07 17:11:26] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SALIDA_DETALLE' AND scm.name = SCHEMA_NAME()) [] []
[2017-03-07 17:11:27] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SALIDA_DETALLE' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-03-07 17:11:27] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SALIDA_DETALLE' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-03-07 17:11:28] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SERVICIO_ESPECIAL_COBRO' AND scm.name = SCHEMA_NAME()) [] []
[2017-03-07 17:11:28] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SERVICIO_ESPECIAL_COBRO' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-03-07 17:11:29] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SERVICIO_ESPECIAL_COBRO' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-03-07 17:11:30] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SOCIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-03-07 17:11:30] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SOCIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-03-07 17:11:31] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SOCIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-03-07 17:11:31] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SUBCATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-03-07 17:11:31] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SUBCATEGORIA_ARTICULOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-03-07 17:11:32] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SUBCATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-03-07 17:11:32] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME()) [] []
[2017-03-07 17:11:33] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SUCURSALES' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-03-07 17:11:33] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-03-07 17:11:34] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'TABLA_ARCHIVOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-03-07 17:11:34] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'TABLA_ARCHIVOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-03-07 17:11:34] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'TABLA_ARCHIVOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-03-07 17:11:35] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'TIPOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-03-07 17:11:35] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'TIPOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-03-07 17:11:35] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'TIPOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-03-07 17:11:36] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'USUARIO_SUCURSALES' AND scm.name = SCHEMA_NAME()) [] []
[2017-03-07 17:11:36] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'USUARIO_SUCURSALES' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-03-07 17:11:36] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'USUARIO_SUCURSALES' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-03-07 17:11:37] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'USUARIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-03-07 17:11:37] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'USUARIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-03-07 17:11:37] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'USUARIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-03-07 17:12:56] doctrine.DEBUG: SELECT name FROM sysobjects WHERE type = 'U' AND name != 'sysdiagrams' AND category != 2 ORDER BY name [] []
[2017-03-07 17:12:56] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'ARTICULOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-03-07 17:12:57] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'ARTICULOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-03-07 17:12:57] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'ARTICULOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-03-07 17:12:57] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'BODEGAS' AND scm.name = SCHEMA_NAME()) [] []
[2017-03-07 17:12:58] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'BODEGAS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-03-07 17:12:58] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'BODEGAS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-03-07 17:12:58] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_COBROS' AND scm.name = SCHEMA_NAME()) [] []
[2017-03-07 17:12:59] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_COBROS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-03-07 17:12:59] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_COBROS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-03-07 17:12:59] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-03-07 17:12:59] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_SERVICIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-03-07 17:13:00] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-03-07 17:13:00] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-03-07 17:13:00] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATEGORIA_ARTICULOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-03-07 17:13:00] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-03-07 17:13:01] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-03-07 17:13:01] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CONSORCIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-03-07 17:13:02] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-03-07 17:13:02] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'ENTRADA' AND scm.name = SCHEMA_NAME()) [] []
[2017-03-07 17:13:02] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'ENTRADA' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-03-07 17:13:03] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'ENTRADA' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-03-07 17:13:03] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'ENTRADA_DETALLE' AND scm.name = SCHEMA_NAME()) [] []
[2017-03-07 17:13:03] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'ENTRADA_DETALLE' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-03-07 17:13:03] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'ENTRADA_DETALLE' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-03-07 17:13:04] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'MONEDAS' AND scm.name = SCHEMA_NAME()) [] []
[2017-03-07 17:13:04] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'MONEDAS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-03-07 17:13:04] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'MONEDAS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-03-07 17:13:04] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SALIDA' AND scm.name = SCHEMA_NAME()) [] []
[2017-03-07 17:13:05] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SALIDA' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-03-07 17:13:05] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SALIDA' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-03-07 17:13:05] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SALIDA_DETALLE' AND scm.name = SCHEMA_NAME()) [] []
[2017-03-07 17:13:05] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SALIDA_DETALLE' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-03-07 17:13:06] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SALIDA_DETALLE' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-03-07 17:13:06] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SERVICIO_ESPECIAL_COBRO' AND scm.name = SCHEMA_NAME()) [] []
[2017-03-07 17:13:06] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SERVICIO_ESPECIAL_COBRO' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-03-07 17:13:07] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SERVICIO_ESPECIAL_COBRO' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-03-07 17:13:07] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SOCIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-03-07 17:13:08] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SOCIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-03-07 17:13:09] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SOCIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-03-07 17:13:09] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SUBCATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-03-07 17:13:09] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SUBCATEGORIA_ARTICULOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-03-07 17:13:10] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SUBCATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-03-07 17:13:10] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME()) [] []
[2017-03-07 17:13:10] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SUCURSALES' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-03-07 17:13:11] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-03-07 17:13:11] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'TABLA_ARCHIVOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-03-07 17:13:12] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'TABLA_ARCHIVOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-03-07 17:13:12] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'TABLA_ARCHIVOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-03-07 17:13:13] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'TIPOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-03-07 17:13:13] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'TIPOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-03-07 17:13:14] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'TIPOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-03-07 17:13:14] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'USUARIO_SUCURSALES' AND scm.name = SCHEMA_NAME()) [] []
[2017-03-07 17:13:14] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'USUARIO_SUCURSALES' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-03-07 17:13:15] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'USUARIO_SUCURSALES' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-03-07 17:13:15] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'USUARIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-03-07 17:13:16] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'USUARIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-03-07 17:13:16] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'USUARIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-03-08 17:57:04] doctrine.DEBUG: SELECT name FROM sysobjects WHERE type = 'U' AND name != 'sysdiagrams' AND category != 2 ORDER BY name [] []
[2017-03-08 17:57:04] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'ARTICULOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-03-08 17:57:05] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'ARTICULOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-03-08 17:57:05] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'ARTICULOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-03-08 17:57:06] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'BODEGAS' AND scm.name = SCHEMA_NAME()) [] []
[2017-03-08 17:57:06] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'BODEGAS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-03-08 17:57:07] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'BODEGAS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-03-08 17:57:07] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_COBROS' AND scm.name = SCHEMA_NAME()) [] []
[2017-03-08 17:57:07] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_COBROS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-03-08 17:57:08] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_COBROS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-03-08 17:57:08] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-03-08 17:57:08] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_SERVICIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-03-08 17:57:09] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-03-08 17:57:09] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-03-08 17:57:09] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATEGORIA_ARTICULOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-03-08 17:57:10] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-03-08 17:57:10] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-03-08 17:57:10] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CONSORCIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-03-08 17:57:11] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-03-08 17:57:11] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'ENTRADA' AND scm.name = SCHEMA_NAME()) [] []
[2017-03-08 17:57:11] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'ENTRADA' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-03-08 17:57:12] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'ENTRADA' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-03-08 17:57:12] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'ENTRADA_DETALLE' AND scm.name = SCHEMA_NAME()) [] []
[2017-03-08 17:57:12] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'ENTRADA_DETALLE' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-03-08 17:57:13] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'ENTRADA_DETALLE' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-03-08 17:57:13] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'MONEDAS' AND scm.name = SCHEMA_NAME()) [] []
[2017-03-08 17:57:13] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'MONEDAS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-03-08 17:57:14] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'MONEDAS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-03-08 17:57:14] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'PERMISO_CATEGORIA' AND scm.name = SCHEMA_NAME()) [] []
[2017-03-08 17:57:14] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'PERMISO_CATEGORIA' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-03-08 17:57:15] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'PERMISO_CATEGORIA' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-03-08 17:57:15] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'PERMISOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-03-08 17:57:15] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'PERMISOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-03-08 17:57:16] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'PERMISOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-03-08 17:57:16] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SALIDA' AND scm.name = SCHEMA_NAME()) [] []
[2017-03-08 17:57:16] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SALIDA' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-03-08 17:57:17] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SALIDA' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-03-08 17:57:17] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SALIDA_DETALLE' AND scm.name = SCHEMA_NAME()) [] []
[2017-03-08 17:57:17] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SALIDA_DETALLE' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-03-08 17:57:18] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SALIDA_DETALLE' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-03-08 17:57:18] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SERVICIO_ESPECIAL_COBRO' AND scm.name = SCHEMA_NAME()) [] []
[2017-03-08 17:57:19] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SERVICIO_ESPECIAL_COBRO' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-03-08 17:57:19] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SERVICIO_ESPECIAL_COBRO' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-03-08 17:57:19] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SOCIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-03-08 17:57:20] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SOCIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-03-08 17:57:20] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SOCIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-03-08 17:57:20] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SUBCATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-03-08 17:57:21] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SUBCATEGORIA_ARTICULOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-03-08 17:57:21] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SUBCATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-03-08 17:57:22] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME()) [] []
[2017-03-08 17:57:22] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SUCURSALES' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-03-08 17:57:22] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-03-08 17:57:23] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'TABLA_ARCHIVOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-03-08 17:57:23] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'TABLA_ARCHIVOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-03-08 17:57:24] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'TABLA_ARCHIVOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-03-08 17:57:24] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'TIPOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-03-08 17:57:24] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'TIPOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-03-08 17:57:25] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'TIPOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-03-08 17:57:25] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'USUARIO_PERMISO' AND scm.name = SCHEMA_NAME()) [] []
[2017-03-08 17:57:26] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'USUARIO_PERMISO' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-03-08 17:57:26] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'USUARIO_PERMISO' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-03-08 17:57:27] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'USUARIO_SUCURSALES' AND scm.name = SCHEMA_NAME()) [] []
[2017-03-08 17:57:27] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'USUARIO_SUCURSALES' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-03-08 17:57:27] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'USUARIO_SUCURSALES' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-03-08 17:57:28] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'USUARIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-03-08 17:57:28] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'USUARIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-03-08 17:57:29] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'USUARIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-03-08 18:11:41] doctrine.DEBUG: SELECT name FROM sysobjects WHERE type = 'U' AND name != 'sysdiagrams' AND category != 2 ORDER BY name [] []
[2017-03-08 18:11:41] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'ARTICULOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-03-08 18:11:41] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'ARTICULOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-03-08 18:11:42] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'ARTICULOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-03-08 18:11:42] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'BODEGAS' AND scm.name = SCHEMA_NAME()) [] []
[2017-03-08 18:11:42] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'BODEGAS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-03-08 18:11:42] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'BODEGAS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-03-08 18:11:43] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_COBROS' AND scm.name = SCHEMA_NAME()) [] []
[2017-03-08 18:11:43] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_COBROS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-03-08 18:11:43] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_COBROS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-03-08 18:11:44] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-03-08 18:11:44] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_SERVICIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-03-08 18:11:44] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-03-08 18:11:45] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-03-08 18:11:45] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATEGORIA_ARTICULOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-03-08 18:11:45] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-03-08 18:11:46] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-03-08 18:11:46] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CONSORCIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-03-08 18:11:46] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-03-08 18:11:47] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'ENTRADA' AND scm.name = SCHEMA_NAME()) [] []
[2017-03-08 18:11:47] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'ENTRADA' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-03-08 18:11:47] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'ENTRADA' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-03-08 18:11:48] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'ENTRADA_DETALLE' AND scm.name = SCHEMA_NAME()) [] []
[2017-03-08 18:11:48] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'ENTRADA_DETALLE' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-03-08 18:11:48] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'ENTRADA_DETALLE' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-03-08 18:11:48] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'MONEDAS' AND scm.name = SCHEMA_NAME()) [] []
[2017-03-08 18:11:49] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'MONEDAS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-03-08 18:11:49] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'MONEDAS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-03-08 18:11:49] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'PERMISO_CATEGORIA' AND scm.name = SCHEMA_NAME()) [] []
[2017-03-08 18:11:50] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'PERMISO_CATEGORIA' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-03-08 18:11:50] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'PERMISO_CATEGORIA' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-03-08 18:11:50] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'PERMISOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-03-08 18:11:51] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'PERMISOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-03-08 18:11:51] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'PERMISOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-03-08 18:11:51] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SALIDA' AND scm.name = SCHEMA_NAME()) [] []
[2017-03-08 18:11:52] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SALIDA' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-03-08 18:11:52] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SALIDA' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-03-08 18:11:52] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SALIDA_DETALLE' AND scm.name = SCHEMA_NAME()) [] []
[2017-03-08 18:11:52] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SALIDA_DETALLE' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-03-08 18:11:53] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SALIDA_DETALLE' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-03-08 18:11:53] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SERVICIO_ESPECIAL_COBRO' AND scm.name = SCHEMA_NAME()) [] []
[2017-03-08 18:11:53] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SERVICIO_ESPECIAL_COBRO' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-03-08 18:11:54] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SERVICIO_ESPECIAL_COBRO' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-03-08 18:11:54] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SOCIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-03-08 18:11:54] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SOCIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-03-08 18:11:54] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SOCIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-03-08 18:11:55] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SUBCATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-03-08 18:11:55] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SUBCATEGORIA_ARTICULOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-03-08 18:11:55] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SUBCATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-03-08 18:11:56] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME()) [] []
[2017-03-08 18:11:56] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SUCURSALES' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-03-08 18:11:56] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-03-08 18:11:57] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'TABLA_ARCHIVOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-03-08 18:11:57] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'TABLA_ARCHIVOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-03-08 18:11:57] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'TABLA_ARCHIVOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-03-08 18:11:57] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'TIPOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-03-08 18:11:58] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'TIPOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-03-08 18:11:58] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'TIPOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-03-08 18:11:58] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'USUARIO_PERMISO' AND scm.name = SCHEMA_NAME()) [] []
[2017-03-08 18:11:59] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'USUARIO_PERMISO' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-03-08 18:11:59] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'USUARIO_PERMISO' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-03-08 18:11:59] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'USUARIO_SUCURSALES' AND scm.name = SCHEMA_NAME()) [] []
[2017-03-08 18:12:00] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'USUARIO_SUCURSALES' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-03-08 18:12:00] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'USUARIO_SUCURSALES' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-03-08 18:12:00] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'USUARIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-03-08 18:12:01] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'USUARIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-03-08 18:12:01] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'USUARIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-03-10 17:03:13] doctrine.DEBUG: SELECT name FROM sysobjects WHERE type = 'U' AND name != 'sysdiagrams' AND category != 2 ORDER BY name [] []
[2017-03-10 17:03:14] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'ARTICULOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-03-10 17:03:17] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'ARTICULOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-03-10 17:03:17] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'ARTICULOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-03-10 17:03:18] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'BODEGAS' AND scm.name = SCHEMA_NAME()) [] []
[2017-03-10 17:03:18] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'BODEGAS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-03-10 17:03:19] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'BODEGAS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-03-10 17:03:19] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_COBROS' AND scm.name = SCHEMA_NAME()) [] []
[2017-03-10 17:03:19] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_COBROS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-03-10 17:03:20] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_COBROS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-03-10 17:03:20] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-03-10 17:03:20] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_SERVICIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-03-10 17:03:21] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-03-10 17:03:21] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-03-10 17:03:22] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATEGORIA_ARTICULOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-03-10 17:03:22] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-03-10 17:03:23] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-03-10 17:03:23] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CONSORCIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-03-10 17:03:24] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-03-10 17:03:24] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'ENTRADA' AND scm.name = SCHEMA_NAME()) [] []
[2017-03-10 17:03:24] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'ENTRADA' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-03-10 17:03:25] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'ENTRADA' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-03-10 17:03:25] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'ENTRADA_DETALLE' AND scm.name = SCHEMA_NAME()) [] []
[2017-03-10 17:03:25] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'ENTRADA_DETALLE' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-03-10 17:03:26] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'ENTRADA_DETALLE' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-03-10 17:03:26] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'IMAGENES_DOCUMENTOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-03-10 17:03:26] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'IMAGENES_DOCUMENTOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-03-10 17:03:27] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'IMAGENES_DOCUMENTOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-03-10 17:03:27] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'MONEDAS' AND scm.name = SCHEMA_NAME()) [] []
[2017-03-10 17:03:28] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'MONEDAS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-03-10 17:03:28] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'MONEDAS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-03-10 17:03:28] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'PERMISO_CATEGORIA' AND scm.name = SCHEMA_NAME()) [] []
[2017-03-10 17:03:29] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'PERMISO_CATEGORIA' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-03-10 17:03:29] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'PERMISO_CATEGORIA' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-03-10 17:03:29] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'PERMISOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-03-10 17:03:30] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'PERMISOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-03-10 17:03:30] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'PERMISOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-03-10 17:03:31] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SALIDA' AND scm.name = SCHEMA_NAME()) [] []
[2017-03-10 17:03:31] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SALIDA' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-03-10 17:03:31] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SALIDA' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-03-10 17:03:32] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SALIDA_DETALLE' AND scm.name = SCHEMA_NAME()) [] []
[2017-03-10 17:03:32] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SALIDA_DETALLE' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-03-10 17:03:33] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SALIDA_DETALLE' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-03-10 17:03:33] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SERVICIO_ESPECIAL_COBRO' AND scm.name = SCHEMA_NAME()) [] []
[2017-03-10 17:03:33] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SERVICIO_ESPECIAL_COBRO' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-03-10 17:03:34] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SERVICIO_ESPECIAL_COBRO' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-03-10 17:03:34] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SOCIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-03-10 17:03:35] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SOCIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-03-10 17:03:35] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SOCIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-03-10 17:03:36] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SUBCATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-03-10 17:03:36] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SUBCATEGORIA_ARTICULOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-03-10 17:03:37] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SUBCATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-03-10 17:03:37] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME()) [] []
[2017-03-10 17:03:39] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SUCURSALES' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-03-10 17:03:39] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-03-10 17:03:39] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'TABLA_ARCHIVOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-03-10 17:03:40] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'TABLA_ARCHIVOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-03-10 17:03:41] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'TABLA_ARCHIVOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-03-10 17:03:41] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'TIPOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-03-10 17:03:42] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'TIPOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-03-10 17:03:42] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'TIPOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-03-10 17:03:42] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'USUARIO_PERMISO' AND scm.name = SCHEMA_NAME()) [] []
[2017-03-10 17:03:43] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'USUARIO_PERMISO' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-03-10 17:03:43] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'USUARIO_PERMISO' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-03-10 17:03:44] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'USUARIO_SUCURSALES' AND scm.name = SCHEMA_NAME()) [] []
[2017-03-10 17:03:44] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'USUARIO_SUCURSALES' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-03-10 17:03:44] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'USUARIO_SUCURSALES' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-03-10 17:03:45] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'USUARIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-03-10 17:03:45] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'USUARIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-03-10 17:03:45] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'USUARIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-03-10 17:04:03] doctrine.DEBUG: SELECT name FROM sysobjects WHERE type = 'U' AND name != 'sysdiagrams' AND category != 2 ORDER BY name [] []
[2017-03-10 17:04:04] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'ARTICULOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-03-10 17:04:04] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'ARTICULOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-03-10 17:04:04] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'ARTICULOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-03-10 17:04:05] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'BODEGAS' AND scm.name = SCHEMA_NAME()) [] []
[2017-03-10 17:04:05] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'BODEGAS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-03-10 17:04:05] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'BODEGAS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-03-10 17:04:06] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_COBROS' AND scm.name = SCHEMA_NAME()) [] []
[2017-03-10 17:04:06] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_COBROS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-03-10 17:04:06] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_COBROS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-03-10 17:04:07] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-03-10 17:04:07] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATALOGO_SERVICIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-03-10 17:04:07] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATALOGO_SERVICIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-03-10 17:04:07] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-03-10 17:04:08] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CATEGORIA_ARTICULOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-03-10 17:04:09] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-03-10 17:04:09] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-03-10 17:04:09] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'CONSORCIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-03-10 17:04:09] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'CONSORCIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-03-10 17:04:10] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'ENTRADA' AND scm.name = SCHEMA_NAME()) [] []
[2017-03-10 17:04:10] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'ENTRADA' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-03-10 17:04:10] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'ENTRADA' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-03-10 17:04:11] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'ENTRADA_DETALLE' AND scm.name = SCHEMA_NAME()) [] []
[2017-03-10 17:04:11] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'ENTRADA_DETALLE' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-03-10 17:04:11] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'ENTRADA_DETALLE' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-03-10 17:04:11] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'IMAGENES_DOCUMENTOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-03-10 17:04:12] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'IMAGENES_DOCUMENTOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-03-10 17:04:12] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'IMAGENES_DOCUMENTOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-03-10 17:04:12] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'MONEDAS' AND scm.name = SCHEMA_NAME()) [] []
[2017-03-10 17:04:13] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'MONEDAS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-03-10 17:04:13] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'MONEDAS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-03-10 17:04:13] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'PERMISO_CATEGORIA' AND scm.name = SCHEMA_NAME()) [] []
[2017-03-10 17:04:14] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'PERMISO_CATEGORIA' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-03-10 17:04:14] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'PERMISO_CATEGORIA' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-03-10 17:04:14] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'PERMISOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-03-10 17:04:15] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'PERMISOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-03-10 17:04:15] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'PERMISOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-03-10 17:04:15] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SALIDA' AND scm.name = SCHEMA_NAME()) [] []
[2017-03-10 17:04:16] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SALIDA' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-03-10 17:04:16] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SALIDA' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-03-10 17:04:16] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SALIDA_DETALLE' AND scm.name = SCHEMA_NAME()) [] []
[2017-03-10 17:04:16] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SALIDA_DETALLE' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-03-10 17:04:17] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SALIDA_DETALLE' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-03-10 17:04:17] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SERVICIO_ESPECIAL_COBRO' AND scm.name = SCHEMA_NAME()) [] []
[2017-03-10 17:04:17] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SERVICIO_ESPECIAL_COBRO' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-03-10 17:04:18] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SERVICIO_ESPECIAL_COBRO' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-03-10 17:04:18] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SOCIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-03-10 17:04:18] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SOCIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-03-10 17:04:19] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SOCIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-03-10 17:04:19] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SUBCATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-03-10 17:04:19] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SUBCATEGORIA_ARTICULOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-03-10 17:04:20] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SUBCATEGORIA_ARTICULOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-03-10 17:04:20] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME()) [] []
[2017-03-10 17:04:20] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'SUCURSALES' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-03-10 17:04:21] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'SUCURSALES' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-03-10 17:04:21] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'TABLA_ARCHIVOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-03-10 17:04:21] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'TABLA_ARCHIVOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-03-10 17:04:22] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'TABLA_ARCHIVOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-03-10 17:04:22] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'TIPOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-03-10 17:04:22] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'TIPOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-03-10 17:04:22] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'TIPOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-03-10 17:04:23] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'USUARIO_PERMISO' AND scm.name = SCHEMA_NAME()) [] []
[2017-03-10 17:04:23] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'USUARIO_PERMISO' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-03-10 17:04:24] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'USUARIO_PERMISO' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-03-10 17:04:24] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'USUARIO_SUCURSALES' AND scm.name = SCHEMA_NAME()) [] []
[2017-03-10 17:04:24] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'USUARIO_SUCURSALES' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-03-10 17:04:25] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'USUARIO_SUCURSALES' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
[2017-03-10 17:04:25] doctrine.DEBUG: SELECT    col.name,                           type.name AS type,                           col.max_length AS length,                           ~col.is_nullable AS notnull,                           def.definition AS [default],                           col.scale,                           col.precision,                           col.is_identity AS autoincrement,                           col.collation_name AS collation,                           CAST(prop.value AS NVARCHAR(MAX)) AS comment -- CAST avoids driver error for sql_variant type                 FROM      sys.columns AS col                 JOIN      sys.types AS type                 ON        col.user_type_id = type.user_type_id                 JOIN      sys.objects AS obj                 ON        col.object_id = obj.object_id                 JOIN      sys.schemas AS scm                 ON        obj.schema_id = scm.schema_id                 LEFT JOIN sys.default_constraints def                 ON        col.default_object_id = def.object_id                 AND       col.object_id = def.parent_object_id                 LEFT JOIN sys.extended_properties AS prop                 ON        obj.object_id = prop.major_id                 AND       col.column_id = prop.minor_id                 AND       prop.name = 'MS_Description'                 WHERE     obj.type = 'U'                 AND       (obj.name = 'USUARIOS' AND scm.name = SCHEMA_NAME()) [] []
[2017-03-10 17:04:25] doctrine.DEBUG: SELECT f.name AS ForeignKey,                 SCHEMA_NAME (f.SCHEMA_ID) AS SchemaName,                 OBJECT_NAME (f.parent_object_id) AS TableName,                 COL_NAME (fc.parent_object_id,fc.parent_column_id) AS ColumnName,                 SCHEMA_NAME (o.SCHEMA_ID) ReferenceSchemaName,                 OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,                 COL_NAME(fc.referenced_object_id,fc.referenced_column_id) AS ReferenceColumnName,                 f.delete_referential_action_desc,                 f.update_referential_action_desc                 FROM sys.foreign_keys AS f                 INNER JOIN sys.foreign_key_columns AS fc                 INNER JOIN sys.objects AS o ON o.OBJECT_ID = fc.referenced_object_id                 ON f.OBJECT_ID = fc.constraint_object_id                 WHERE (OBJECT_NAME (f.parent_object_id) = 'USUARIOS' AND SCHEMA_NAME (f.schema_id) = SCHEMA_NAME()) [] []
[2017-03-10 17:04:26] doctrine.DEBUG: SELECT idx.name AS key_name,                        col.name AS column_name,                        ~idx.is_unique AS non_unique,                        idx.is_primary_key AS [primary],                        CASE idx.type                            WHEN '1' THEN 'clustered'                            WHEN '2' THEN 'nonclustered'                            ELSE NULL                        END AS flags                 FROM sys.tables AS tbl                 JOIN sys.schemas AS scm ON tbl.schema_id = scm.schema_id                 JOIN sys.indexes AS idx ON tbl.object_id = idx.object_id                 JOIN sys.index_columns AS idxcol ON idx.object_id = idxcol.object_id AND idx.index_id = idxcol.index_id                 JOIN sys.columns AS col ON idxcol.object_id = col.object_id AND idxcol.column_id = col.column_id                 WHERE (tbl.name = 'USUARIOS' AND scm.name = SCHEMA_NAME())                 ORDER BY idx.index_id ASC, idxcol.key_ordinal ASC [] []
